1
00:00:02,230 --> 00:00:08,750
اکنون قبل از اینکه در نهایت به تجدید کننده جاوا اسکریپت شیرجه بزنیم یا به صورت اختیاری در صورتی که از آن رد شوید، به

2
00:00:08,810 --> 00:00:10,010
مبانی nodejs،

3
00:00:10,220 --> 00:00:17,180
اجازه دهید به دو روش مختلف برای اجرای کد گره شما شیرجه بزنم. یکی از راه های اجرای آن که من به طور خلاصه

4
00:00:17,180 --> 00:00:25,700
قبلاً در این ماژول ذکر شده است. Repl مخفف عبارت read, reading user input, eval, evaluating است

5
00:00:25,700 --> 00:00:35,390
ورودی کاربر، چاپ، خروجی نتیجه و l، حلقه برای بازگشت و انتظار برای ورودی جدید و پاسخ

6
00:00:35,390 --> 00:00:36,380
چیزی است که شما استفاده می کنید

7
00:00:36,440 --> 00:00:43,040
اگر فقط node را در ترمینال خود تایپ کنید. اینجا من در ترمینال هستم یا در ویندوز این دستور شماست

8
00:00:43,040 --> 00:00:48,950
prompt و در آنجا اگر فقط node را با Node نصب شده تایپ کنید، اکنون در repl هستید که می توانید آن را شناسایی کنید.

9
00:00:48,950 --> 00:00:54,350
با این واقعیت که شما اکنون آن مسیر کامل نام رایانه خود را در ابتدا ندارید، اما فقط همین

10
00:00:55,010 --> 00:00:56,340
بزرگتر از علامت

11
00:00:56,480 --> 00:01:05,090
و در آنجا می توانید دستورات گره مانند گزارش کنسول، دو به علاوه دو یا همچنین نوشتن را اجرا کنید، در تعامل با

12
00:01:05,090 --> 00:01:05,750
فایل ها.

13
00:01:05,810 --> 00:01:12,860
می‌توانید سیستم فایل را همان‌طور که قبلاً در فایل خود انجام دادیم وارد کنید و سپس می‌توانیم از آن استفاده کنیم

14
00:01:12,890 --> 00:01:15,760
برای نوشتن یک فایل به صورت همزمان و غیره،

15
00:01:15,860 --> 00:01:17,340
بنابراین همه در اینجا کار می کنند

16
00:01:17,570 --> 00:01:21,870
و البته این محیطی است که ما کد خود را در فایل‌ها ذخیره نمی‌کنیم

17
00:01:21,920 --> 00:01:25,890
اما ما برنامه گره خود را با هر خط می نویسیم.

18
00:01:25,940 --> 00:01:28,150
خطوط مستقل از یکدیگر کار نمی کنند،

19
00:01:28,190 --> 00:01:31,730
بنابراین اکنون می توانم برای مثال از بسته سیستم فایل استفاده کنم

20
00:01:31,730 --> 00:01:39,710
حالا که یک خط زودتر آن را وارد کردم اما وقتی از این فرآیند با کنترل c خارج شدم، کارم تمام شد.

21
00:01:39,710 --> 00:01:41,090
این در هیچ کجا ذخیره نمی شود،

22
00:01:41,090 --> 00:01:45,950
این فایلی نیست که بتوانم دوباره اجرا کنم و بنابراین یک زمین بازی عالی است.

23
00:01:45,950 --> 00:01:51,470
جایگزین کدهای در حال اجرا این است که فایل‌ها را همانطور که قبلاً انجام دادیم و اساساً اجرا می‌کنیم اجرا کنید

24
00:01:51,470 --> 00:01:53,250
آن را برای بقیه دوره انجام دهید،

25
00:01:53,260 --> 00:01:56,900
این جایگزینی برای استفاده از repl است. وقتی فایل ها را اجرا می کنید،

26
00:01:56,900 --> 00:02:02,750
مزیت البته این است و به همین دلیل است که ما از آن برای برنامه های واقعی استفاده می کنیم، که کد خود را از قبل می نویسیم

27
00:02:02,750 --> 00:02:08,930
و ما همیشه می توانیم آن را اجرا کنیم و وقتی یک برنامه واقعی می سازیم، می خواهیم کد خود را البته در فایل ها ذخیره کنیم

28
00:02:08,930 --> 00:02:14,120
سپس می‌توانیم آن را در پایان اجرا کنیم و می‌توانیم آن را با سایر توسعه‌دهندگان به اشتراک بگذاریم و همچنین می‌توانیم آن را متوقف کنیم

29
00:02:14,120 --> 00:02:15,840
کار ما و بعدا تحویل بگیریم

30
00:02:15,880 --> 00:02:22,060
و جایی که ما هرگز کدی را که می نویسیم گم نمی کنیم. اما repl یک زمین بازی عالی است زیرا می توانیم از آن برای اجرای برخی از آنها استفاده کنیم

31
00:02:22,070 --> 00:02:27,660
دستورات، برای امتحان کردن چیزهای خاصی چون ما کد را هنگام نوشتن اجرا می کنیم و بنابراین اینها هستند

32
00:02:27,710 --> 00:02:30,650
دو روش برای اجرای کد گره شما،

33
00:02:30,800 --> 00:02:35,390
بدیهی است که در این دوره با رویکرد کد فروشگاه در فایل ها پیش خواهیم رفت

34
00:02:35,480 --> 00:02:41,750
اما هر زمان که می‌گویم پاسخ، به این روش ورودی مستقیم اشاره می‌کنم که می‌توانم آن را برای امتحان کردن توصیه کنم

35
00:02:41,750 --> 00:02:45,710
برخی از ویژگی ها اما نه برای نوشتن برنامه های واقعی،

36
00:02:45,710 --> 00:02:47,510
این کاری نیست که شما انجام می دهید.

37
00:02:47,510 --> 00:02:50,430
من فقط می خواستم این دو راه را از سر راه بردارم،

38
00:02:50,480 --> 00:02:56,270
ما در اینجا روی سمت چپ تمرکز خواهیم کرد و با آن، بیایید به نوشتن کد با ماژول های بعدی بپردازیم.