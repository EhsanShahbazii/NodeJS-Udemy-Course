1
00:00:02,140 --> 00:00:07,280
ما در حال ارائه الگوی فروشگاه خود هستیم، اما هیچ محتوای پویا را ارائه نمی دهیم،

2
00:00:07,380 --> 00:00:11,400
که با این حال کل ایده این ماژول است.

3
00:00:11,400 --> 00:00:13,600
ما اطلاعات مدیریت خود را با محصولات دریافت می کنیم،

4
00:00:13,740 --> 00:00:22,390
بنابراین بیایید در واقع این محصولات را از محصولات داده های مدیریت حذف کنیم و اکنون می خواهیم آن را به ما منتقل کنیم

5
00:00:22,390 --> 00:00:28,680
قالب را به قالب خود تزریق کنید تا بتوانیم در این فایل قالب از آن استفاده کنیم و به نوعی خروجی بگیریم

6
00:00:28,690 --> 00:00:30,840
آنجا. برای انجام آن،

7
00:00:31,030 --> 00:00:37,600
ما می توانیم به سادگی یک آرگومان دوم را به متد render ارسال کنیم، متد render به ما امکان می دهد داده ها را ارسال کنیم

8
00:00:37,660 --> 00:00:40,450
که باید به دیدگاه ما اضافه شود.

9
00:00:40,970 --> 00:00:45,000
در اینجا ما می توانیم محصولات را به سادگی ارسال کنیم، اما نه به این صورت

10
00:00:45,130 --> 00:00:51,970
اما به عنوان یک شی جاوا اسکریپت که در آن ما آن را به یک نام کلید نگاشت می کنیم که سپس می توانیم در قالب برای ارجاع به آن استفاده کنیم.

11
00:00:51,970 --> 00:00:58,690
داده‌هایی را که در حال ارسال می‌کنیم و می‌توانیم به صورت محموله ارسال کنیم، به سادگی برای جلوگیری از سردرگمی نام‌گذاری،

12
00:00:58,690 --> 00:01:02,880
شما می توانید از محصولات استفاده کنید، اما من محصولاتم را متصل می کنم،

13
00:01:02,890 --> 00:01:06,880
بنابراین این ثابت به کلید prods در این شی.

14
00:01:06,900 --> 00:01:08,590
این به این الگو منتقل می شود

15
00:01:08,770 --> 00:01:12,280
و اکنون در قالب، ما فقط می توانیم به محصولات دسترسی داشته باشیم،

16
00:01:12,300 --> 00:01:16,360
این اکنون در دسترس است، به هر حال می توانیم بیش از یک فیلد را نیز پاس کنیم،

17
00:01:16,360 --> 00:01:17,410
می توانستیم عبور کنیم

18
00:01:17,680 --> 00:01:23,360
فرض کنید یک عنوان سند که shop است و اکنون می توانیم از آن نیز استفاده کنیم.

19
00:01:23,380 --> 00:01:25,270
و شاید با عنوان سند شروع کنیم

20
00:01:25,300 --> 00:01:31,870
بنابراین این فیلد اضافی که ما در این شی رد می کنیم. در shop.pug، فرض کنید عنوان اینجا واقعاً باید باشد

21
00:01:31,870 --> 00:01:38,610
آن عنوان سند باشد. برای این ما می توانیم از قالب سفارشی نحوی که pug به ما می دهد استفاده کنیم

22
00:01:38,610 --> 00:01:44,770
و اگر فقط می خواهید متنی را خروجی بگیرید، این یک هشتگ است که به دنبال آن دو پرانتز و بین آنها

23
00:01:44,770 --> 00:01:50,260
پرانتزهای فرفری، می‌توانید هر ارزشی را که در نظر می‌گیرید در نظر بگیرید،

24
00:01:50,260 --> 00:01:58,530
بنابراین هر فیلدی که در این شی دارید، مانند عنوان doc، می توانیم از آن استفاده کنیم و به سادگی به عنوان doc در اینجا مراجعه کنیم.

25
00:01:59,270 --> 00:02:05,150
اگر اکنون آن را ذخیره کنیم و به صفحه خود برگردیم، در حال حاضر هنوز در فروشگاه من است،

26
00:02:05,400 --> 00:02:14,280
اگر اکنون دوباره بارگیری کنم فروشگاه است و فروشگاه است زیرا این عنوانی است که من در عنوان doc در اینجا و عنوان سند ذخیره می کنم

27
00:02:14,280 --> 00:02:16,290
چیزی است که ما در اینجا خروجی می دهیم،

28
00:02:16,290 --> 00:02:18,880
بنابراین درک این جریان مهم است.

29
00:02:19,020 --> 00:02:24,380
البته اکنون می توانیم از آن برای خروجی محصولات خود نیز استفاده کنیم. برای این در کنار هدر،

30
00:02:24,390 --> 00:02:30,840
بنابراین در همان سطح تورفتگی، این مهم است زیرا تودرتوی html را تعریف می کند، ما می توانیم

31
00:02:30,840 --> 00:02:33,630
عنصر اصلی را همانطور که در اینجا داریم اضافه کنید

32
00:02:33,960 --> 00:02:37,030
و حالا من نمی خواهم این پاراگراف h1 را در اینجا داشته باشم

33
00:02:37,260 --> 00:02:44,250
در عوض اکنون می خواهم محصول خود را با این کد خروجی بگیرم. بنابراین من آن را کپی می کنم حتی اگر html است

34
00:02:44,250 --> 00:02:49,950
کد اما ما این را تنظیم می کنیم و آن را به کد pug منتقل می کنیم.

35
00:02:50,130 --> 00:02:53,810
بنابراین div در اینجا فقط .grid می شود،

36
00:02:53,970 --> 00:02:56,800
شما نیازی به div ندارید زیرا اگر چیزی ندارید،

37
00:02:56,820 --> 00:02:58,410
فرض بر این است که یک div باشد،

38
00:02:58,740 --> 00:03:03,630
مقاله با این کلاس به article.product تبدیل می شود

39
00:03:03,630 --> 00:03:09,930
مورد با این حال مهم است، اگر چندین کلاس دارید، باید آنها را ادغام کرده و به سادگی به هم متصل کنید

40
00:03:09,930 --> 00:03:14,310
آنها را با نقطه از هم جدا کنید و هرگز فرورفتگی را فراموش نکنید،

41
00:03:14,310 --> 00:03:20,760
مقاله باید در داخل این div با این کلاس باشد، پس بیایید آن را یک سطح تورفتگی کنیم. اینجا

42
00:03:20,790 --> 00:03:26,700
ما یک هدر تورفتگی گرفتیم زیرا در مقاله تو در تو قرار دارد و این هدر نیز این کلاس را در اینجا دارد.

43
00:03:26,780 --> 00:03:32,130
پس بیایید آن را به این صورت اضافه کنیم و سپس در هدر، یک تگ h1 دریافت کردیم

44
00:03:32,200 --> 00:03:32,740
پس بیایید تورفتگی هم کنیم

45
00:03:32,740 --> 00:03:37,210
این و اینجا دوباره این یک کلاس css دارد.

46
00:03:37,210 --> 00:03:43,390
حالا مقداری متن نیز دارد و شما به سادگی متن را با یک فضای خالی از عنصر جدا می کنید و هرگز

47
00:03:43,390 --> 00:03:44,610
نیاز به بستن برچسب‌ها در اینجا،

48
00:03:44,620 --> 00:03:46,230
که توسط میناکاری برای شما انجام می شود.

49
00:03:46,420 --> 00:03:51,040
بنابراین این واقعاً یک نحو است که با html معمولی بسیار متفاوت است و اگر دوست دارید واقعاً به شما بستگی دارد

50
00:03:51,040 --> 00:03:51,890
که یا نه،

51
00:03:51,910 --> 00:03:54,950
من شخصا زیاد با آن کار نمی کنم، اما اگر آن را دوست دارید،

52
00:03:54,950 --> 00:03:59,580
این البته می تواند به شما امکان نوشتن فایل های html بسیار ناب را بدهد.

53
00:03:59,710 --> 00:04:04,360
ما نیازی به تگ هدر بسته شدن نداریم زیرا دوباره به صورت خودکار اضافه می شود، بنابراین می توانیم ادامه دهیم

54
00:04:04,480 --> 00:04:08,140
به تصویر کارت که باید در کنار هدر کارت باشد.

55
00:04:08,370 --> 00:04:16,610
پس بیایید تورفتگی کنیم، علامت کوچکتر را حذف کنیم، این کلاس را بدون کلمه کلیدی کلاس اینجا اضافه کنیم

56
00:04:17,260 --> 00:04:19,250
و بیایید تصویر داخل آن را اضافه کنیم.

57
00:04:19,480 --> 00:04:24,000
ما یک تصویر دریافت می کنیم و دوباره مانند قبل با پیوندهای اینجا،

58
00:04:24,190 --> 00:04:29,560
اگر ویژگی‌هایی دارید، آنها را در براکت‌های معمولی می‌پیچید، مانند این، بنابراین

59
00:04:29,560 --> 00:04:34,370
مانند منبع و همچنین کلید alt.

60
00:04:35,240 --> 00:04:37,400
به هر حال همیشه می توانید از emett نیز در اینجا استفاده کنید،

61
00:04:37,400 --> 00:04:40,040
این افزونه ای است که به شما در ایجاد خودکار آن کمک می کند

62
00:04:40,040 --> 00:04:44,960
اگر تگ یا نام کلاس را با یک نقطه در ابتدا تایپ کنید و اینتر را بزنید، به طور خودکار تکمیل می شود.

63
00:04:44,960 --> 00:04:48,800
که برای شما و به شما نمایندگی میناکاری مربوطه

64
00:04:49,040 --> 00:04:54,280
و در آنجا دیدیم که در واقع به یک کاما پس از منبع، درست قبل از alt نیاز داریم.

65
00:04:54,680 --> 00:04:58,190
بنابراین اکنون این یک تصویر تو در تو در این تصویر کارت ایجاد می کند،

66
00:04:58,280 --> 00:05:05,650
نیازی به بستن تگ div ندارید. اکنون محتوای کارت نیز همانند تصویر کارت است،

67
00:05:05,690 --> 00:05:11,260
پس بیایید این را تورفتگی کنیم، آن را برداریم و این نقطه را اینجا اضافه کنیم

68
00:05:13,160 --> 00:05:16,440
و بیایید همین کار را برای تگ h2 انجام دهیم، آن را تورفتگی کنیم،

69
00:05:16,520 --> 00:05:18,660
آن را به یک پاگ منطبق تبدیل کنید

70
00:05:18,950 --> 00:05:19,890
راه اندازی اینجا،

71
00:05:20,150 --> 00:05:22,070
ما یک متن در کنار آن داریم مانند این،

72
00:05:22,250 --> 00:05:23,530
در حال حاضر این ثابت است،

73
00:05:23,570 --> 00:05:25,530
بعداً این پویا خواهد شد

74
00:05:25,910 --> 00:05:35,600
و بیایید همین کار را در اینجا برای پاراگراف انجام دهیم، کلاس را در اینجا اضافه کنیم و مقداری متن ثابت داشته باشیم و حذف کنیم

75
00:05:35,690 --> 00:05:36,760
برچسب بسته شدن

76
00:05:38,140 --> 00:05:41,820
اکنون تقریباً تمام شده است، تنها چند عنصر باقی مانده است.

77
00:05:41,890 --> 00:05:42,900
ما یک div دریافت می کنیم،

78
00:05:43,000 --> 00:05:48,760
اکنون این نیز باید در کنار محتوای کارت باشد، بنابراین بیایید آن را تورفتگی کنیم، یک div همانطور که اشاره کردم برچسب ندارد

79
00:05:48,760 --> 00:05:49,350
باید اضافه کنید

80
00:05:49,360 --> 00:05:51,150
شما فقط می توانید یک چیزی داشته باشید،

81
00:05:51,200 --> 00:05:55,520
بنابراین نقطه و نام کلاس. اگر کلاس ندارید، مطمئناً آن div را می‌نویسید

82
00:05:55,540 --> 00:06:00,590
وگرنه هیچی نیست دکمه در داخل اقدامات کارت است

83
00:06:00,600 --> 00:06:03,380
و این دوباره کلاس دارد

84
00:06:03,610 --> 00:06:07,810
و سپس مقداری متن در داخل خود دارد که در کنار عنصر دکمه اضافه می کنیم

85
00:06:08,020 --> 00:06:10,540
و تمام این برچسب های بسته شدن را می توان حذف کرد.

86
00:06:10,690 --> 00:06:15,140
اکنون شبکه ای از کارت های محصول را خروجی می دهد

87
00:06:15,310 --> 00:06:17,640
با این حال فقط با محتوای ثابت.

88
00:06:17,690 --> 00:06:24,830
اکنون برای اینکه این حالت ثابت نباشد، باید همه محصولات را تکرار کنیم و به یاد داشته باشیم که پاس می کنیم

89
00:06:24,830 --> 00:06:33,260
محصول را در اینجا در کلید prods مشاهده کنید. بنابراین برای تکرار و تکرار این مقاله برای همه

90
00:06:33,260 --> 00:06:39,910
محصولات، ما به سادگی می توانیم یک نحو خاص ارائه شده توسط pug را اضافه کنیم و شما چنین حلقه ای را با اضافه کردن ایجاد کنید

91
00:06:40,100 --> 00:06:46,310
هر کلمه کلیدی و سپس مقداری که می خواهید مقدار تکرار فعلی را در آن ذخیره کنید،

92
00:06:46,430 --> 00:06:49,040
بنابراین یک محصول واحد در مورد ما

93
00:06:49,040 --> 00:06:53,210
و سپس داخل و سپس آرایه ای که می خواهید از طریق آن حلقه بزنید،

94
00:06:53,240 --> 00:07:00,740
بنابراین این می تواند در مورد ما prods باشد

95
00:07:00,740 --> 00:07:02,170
عبور به دید ما

96
00:07:03,600 --> 00:07:05,570
بنابراین در حال حاضر ما در حال حلقه زدن از طریق محصولات هستیم،

97
00:07:05,610 --> 00:07:11,580
بیایید همه این را در حلقه فرو کنیم تا کل این بلوک را برای هر محصول تکرار کنیم

98
00:07:11,640 --> 00:07:17,550
در این آرایه prods و اکنون می توانیم از متغیر محصولی که در حال ایجاد آن در اینجا هستیم استفاده کنیم

99
00:07:17,910 --> 00:07:19,350
برای خروجی داده ها،

100
00:07:19,470 --> 00:07:24,080
مانند عنوان در اینجا می توانیم هشتگ خروجی بگیریم

101
00:07:24,210 --> 00:07:32,370
و سپس فقط product.title زیرا به یاد داشته باشید، یک محصول واحد که در اینجا به این آرایه اضافه می کنیم، است

102
00:07:32,370 --> 00:07:35,210
یک شی با یک کلید عنوان،

103
00:07:35,220 --> 00:07:40,180
ما این را در اینجا در admin.js ایجاد می کنیم، یک شی جدید را با یک کلید عنوان فشار می دهیم،

104
00:07:40,180 --> 00:07:43,790
این یک محصول واحد است که وقتی از آن استفاده کنیم، آن را خواهیم داشت،

105
00:07:43,920 --> 00:07:48,980
بنابراین این چیزی است که ما در اینجا اضافه می کنیم یا در اینجا خروجی می دهیم. با وجود همه این تغییرات،

106
00:07:48,990 --> 00:07:55,560
اگر اکنون این را ذخیره کنیم و این صفحه را دوباره بارگیری کنیم، چیزی نمی بینیم زیرا هنوز محصولی نداریم

107
00:07:55,800 --> 00:08:05,520
اما اگر یک کتاب اول را اینجا اضافه کنیم، در واقع آن را اینجا می بینیم و می بینیم که تصویر دیگر کار نمی کند، بنابراین

108
00:08:05,890 --> 00:08:14,470
اجازه دهید به سرعت یک تصویر رایگان برای استفاده اضافه کنم، البته می توانید به سادگی برای هر تصویری که دارید در گوگل جستجو کنید

109
00:08:14,470 --> 00:08:23,480
در حال حاضر می توانید به عنوان یک تصویر ساختگی در اینجا استفاده کنید. هنگامی که یکی را دریافت کردید، آن منبع را هر کدام که هست بردارید و به سادگی جایگزین کنید

110
00:08:23,480 --> 00:08:23,940
آن اینجا،

111
00:08:24,050 --> 00:08:27,190
این فقط برای اهداف تمرینی در اینجا است

112
00:08:28,590 --> 00:08:33,760
بنابراین اکنون اگر این را تکرار کنیم، به نظر می رسد بسیار بهتر است. به هر حال اگر فقط چیزی را در قالب تغییر دهید

113
00:08:33,900 --> 00:08:34,950
همانطور که من انجام دادم،

114
00:08:35,070 --> 00:08:40,560
شما نیازی به راه اندازی مجدد سرور ندارید و نود یک این کار را انجام نمی دهد زیرا قالب ها بخشی از آن نیستند

115
00:08:40,560 --> 00:08:41,870
کد سمت سرور شما،

116
00:08:41,910 --> 00:08:45,440
آنها اساساً فقط الگوهایی هستند که به هر حال در پرواز انتخاب می شوند

117
00:08:45,450 --> 00:08:49,740
بنابراین اگر آنها را برای درخواست بعدی تغییر دهید، آنها به طور خودکار آن نسخه جدید را دریافت خواهند کرد

118
00:08:49,860 --> 00:08:51,920
قبلا، پیش از این.

119
00:08:52,010 --> 00:08:54,590
بنابراین با این، ما یک مقدمه اساسی برای pug دریافت می کنیم،

120
00:08:54,620 --> 00:09:04,270
نحو بسیار کم و عجیبی است و اینکه چگونه می توانید مقادیر منفرد مانند متن یا حلقه را از بین ببرید

121
00:09:04,280 --> 00:09:05,750
برخی از آیتم ها

122
00:09:05,750 --> 00:09:09,290
اکنون البته ممکن است این مورد را داشته باشیم که اصلاً محصولی نداشته باشیم،

123
00:09:09,290 --> 00:09:15,710
بنابراین یکی از کارهایی که شما نیز می خواهید انجام دهید این است که می خواهید اطمینان حاصل کنید که یک بررسی مشروط و ارائه دارید

124
00:09:15,860 --> 00:09:19,050
یا محتوای الف یا محتوای ب

125
00:09:19,290 --> 00:09:21,190
و ما می توانیم این کار را با پاگ نیز انجام دهیم.

126
00:09:21,290 --> 00:09:25,300
می توانیم یک عبارت if اضافه کنیم و بررسی کنیم که product.length،

127
00:09:25,310 --> 00:09:31,720
بنابراین اگر این آرایه از محصولات بزرگتر از صفر باشد، اگر بزرگتر از صفر باشد، ما این را خروجی خواهیم کرد،

128
00:09:31,730 --> 00:09:38,100
پس بیایید همه را در دستور if قرار دهیم زیرا در این صورت ما برخی از محصولات را برای خروجی داریم

129
00:09:38,140 --> 00:09:40,880
من در اینجا به همان سطح شبکه خواهم رفت،

130
00:09:41,110 --> 00:09:49,450
به عنوان عبارت if و یک بلوک else اضافه کنید زیرا در غیر این صورت تگ h1 را در جایی که می گویم هیچ محصولی وجود ندارد، خروجی می دهم.

131
00:09:50,090 --> 00:09:54,510
با این، حالا اگر سرور را ریستارت کنم تا آرایه محصولاتم پاک شود

132
00:09:55,790 --> 00:09:58,310
و من این صفحه را دوباره بارگذاری می کنم،

133
00:09:58,310 --> 00:10:02,260
من در واقع یک خطا دریافت می کنم زیرا مطمئناً این خطا در اینجا است،

134
00:10:02,330 --> 00:10:08,970
به یاد داشته باشید که ما محصولات را به عنوان یک کلید ارسال می کنیم، نه محصولات، بنابراین محصولات چیزی است که باید در اینجا بررسی کنم. حالا اگر من

135
00:10:09,010 --> 00:10:09,840
بارگذاری مجدد،

136
00:10:09,890 --> 00:10:15,590
من هیچ محصولی نمی بینم، اما اگر یکی را اضافه کنم، اولین کتاب مانند این،

137
00:10:15,590 --> 00:10:17,180
اکنون ما آن را در عوض می بینیم.

138
00:10:17,210 --> 00:10:23,780
بنابراین اکنون سه بخش مهم را دریافت کردیم، خروجی متن ساده و غیره، خروجی لیست و خروجی

139
00:10:23,830 --> 00:10:26,420
محتوای مشروط این پاگ است

140
00:10:26,630 --> 00:10:32,020
به طور خلاصه و به طور کلی اینگونه است که شما از موتورهای قالب سازی در expressjs استفاده می کنید.

141
00:10:32,030 --> 00:10:37,850
اکنون به عنوان یک تمرین با آن بازی کنید و همچنین روی آن محصول اضافه کار کنید

142
00:10:37,940 --> 00:10:45,350
در صفحه html قرار دهید و همه این موارد یا تمام مطالب اینجا را با قالب های پاگ جایگزین کنید. کد html را نگه دارید

143
00:10:45,360 --> 00:10:45,760
دور و بر،

144
00:10:45,770 --> 00:10:49,730
این فایل ها را حذف نکنید تا بعداً بتوانیم به راحتی به موتورهای قالب سازی دیگر سوئیچ کنیم

145
00:10:49,970 --> 00:10:55,760
اما مطمئن شوید که برای دو صفحه دیگر قالب‌های پاگ اضافه کرده‌اید و آنها را رندر می‌دهید

146
00:10:55,760 --> 00:11:00,320
مقداری کد پویا مانند عنوان صفحه تزریق کنید. در سخنرانی بعدی، این کار را با هم انجام خواهیم داد.