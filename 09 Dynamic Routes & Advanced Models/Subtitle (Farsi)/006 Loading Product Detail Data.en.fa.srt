1
00:00:02,350 --> 00:00:06,800
اکنون که می‌توانیم بخش پویا خود را در اینجا خروجی بگیریم،

2
00:00:06,910 --> 00:00:12,330
البته می توانیم از آن اطلاعات برای بارگیری آن محصول از فایل محصول خود استفاده کنیم،

3
00:00:12,370 --> 00:00:18,550
بنابراین از طریق مدل محصول ما که مسئول تعامل با محصول است و سپس می توانیم برگردیم

4
00:00:18,550 --> 00:00:22,510
نمایی که در واقع این جزئیات محصول را به ما نشان می دهد.

5
00:00:22,510 --> 00:00:27,360
بنابراین برای بارگذاری، اکنون وارد مدل محصول خود می شویم، در آنجا باید ذخیره کنیم و همه را واکشی می کنیم،

6
00:00:27,400 --> 00:00:36,620
اکنون می‌خواهم یک محصول واحد بارگذاری کنم و برای این کار، یک روش استاتیک جدید اضافه می‌کنم و نام آن را پیدا می‌کنم،

7
00:00:36,630 --> 00:00:38,540
البته نام کاملاً به شما بستگی دارد

8
00:00:38,540 --> 00:00:41,610
اما در آنجا انتظار دارم یک شناسه به عنوان یک استدلال دریافت کنم

9
00:00:41,720 --> 00:00:49,790
و سپس یک تماس برگشتی که پس از اتمام یافتن محصول در اینجا اجرا می شود. در این تابع

10
00:00:49,790 --> 00:00:50,280
اینجا،

11
00:00:50,640 --> 00:00:56,910
من همه محصولاتم را دریافت خواهم کرد زیرا اساساً باید کل فایل را بخوانم،

12
00:00:56,910 --> 00:01:01,520
ما هیچ پایگاه داده ای در اینجا نداریم که بتوانم یک پرس و جو را فقط برای یک محصول اجرا کنم،

13
00:01:01,560 --> 00:01:04,420
البته زمانی که یک پایگاه داده اضافه کنیم این کار را انجام خواهیم داد.

14
00:01:04,440 --> 00:01:10,780
بنابراین در حال حاضر من تمام محصولات خود را دقیقاً مانند عملکرد fetch all در اینجا دریافت می کنم

15
00:01:11,280 --> 00:01:14,540
اما در اینجا من اکنون محصولاتم را در دسترس دارم

16
00:01:15,000 --> 00:01:21,470
و قبل از اینکه آنها را در تماس برگشتی برگردانم، می خواهم آن یک محصول را با شناسه خود فیلتر کنم.

17
00:01:21,480 --> 00:01:27,690
اکنون به خاطر داشته باشید که محصولاتی که من در اینجا برمی گردم از قبل یک آرایه تجزیه شده از محصولات و یک محصول هستند

18
00:01:27,720 --> 00:01:29,160
حق شناسنامه خواهد داشت،

19
00:01:29,160 --> 00:01:31,730
ما آن شناسه را در اینجا اختصاص می دهیم و آن شناسه را ذخیره می کنیم.

20
00:01:32,010 --> 00:01:38,040
بنابراین ما یک آرایه از اشیاء خواهیم داشت که هر شی یک شناسه دارد و بنابراین اکنون می توانیم از نرمال استفاده کنیم

21
00:01:38,040 --> 00:01:41,490
جاوا اسکریپت برای فیلتر کردن محصول مورد علاقه ما.

22
00:01:41,790 --> 00:01:47,020
من به سادگی می توانم محصول خود را پیدا کنم و آن را در این متغیر موقت در آنجا ذخیره کنم،

23
00:01:48,020 --> 00:01:49,150
من می توانم آن را پیدا کنم

24
00:01:49,200 --> 00:01:54,250
با جستجوی محصولات با متد Find، یک روش پیش‌فرض جاوا اسکریپت،

25
00:01:54,530 --> 00:02:02,000
این تابعی را اجرا می کند که برای یافتن هر عنصر در آرایه ارسال می کنیم و عنصر را برمی گردانیم

26
00:02:02,090 --> 00:02:05,200
که این تابعی که برای آن پاس می دهیم true را برمی گرداند.

27
00:02:05,300 --> 00:02:07,690
بنابراین این تابعی که در اینجا پاس می کنیم دریافت خواهد شد

28
00:02:07,790 --> 00:02:13,400
محصولی که در حال حاضر به آن نگاه می کند زیرا آن را برای همه محصولات موجود در آرایه اجرا می کند.

29
00:02:13,400 --> 00:02:18,500
این محصول را به تابع منتقل می کند و سپس من یک تابع فلش را اینجا و آنجا می نویسم

30
00:02:18,500 --> 00:02:22,490
یک دستور تابع فلش کوتاه که در آن می توانید بریس های فرفری را حذف کنید

31
00:02:22,580 --> 00:02:28,460
اگر شما فقط یک خط را وارد کرده اید و نتیجه این یک خط را نیز برمی گردانید، بنابراین یک امر ضمنی وجود دارد

32
00:02:28,460 --> 00:02:31,860
بیانیه بازگشت در مقابل آن کد که اکنون می نویسم،

33
00:02:32,300 --> 00:02:37,670
بنابراین من یک خط کد در اینجا خواهم داشت که برگردانده می شود و در آنجا بررسی می کنم که آیا شناسه محصول است یا خیر

34
00:02:37,670 --> 00:02:42,910
من در حال حاضر به دنبال ID است که به عنوان آرگومان در اینجا دریافت می کنم برابر است

35
00:02:43,050 --> 00:02:48,430
و اگر این درست باشد، محصولی که من در حال حاضر به آن نگاه می کنم، بازگردانده می شود و در آن ذخیره می شود

36
00:02:48,440 --> 00:02:53,530
در اینجا ثابت است و بنابراین من می توانم یک تماس با آن محصول را اجرا کنم.

37
00:02:53,540 --> 00:02:56,950
این یک تابع همزمان است، هیچ کد ناهمگام را اجرا نمی کند،

38
00:02:57,080 --> 00:03:02,000
بنابراین به سادگی داشتن دو خط پشت سر هم کار را در اینجا انجام می دهد.

39
00:03:02,030 --> 00:03:05,060
بنابراین اکنون تابع find by ID را در مدل داریم

40
00:03:05,300 --> 00:03:08,460
و اکنون در کنترلر shop.js، می توانیم از آن استفاده کنیم،

41
00:03:08,510 --> 00:03:15,940
بنابراین به جای ثبت شناسه prod در اینجا، می توانیم محصول را با مراجعه به مدل خود وارد کنیم،

42
00:03:16,030 --> 00:03:22,270
به یاد داشته باشید که ما کلاس را در اینجا وارد می کنیم، محصول را با شناسه پیدا می کنیم، اگرچه نمی توانیم این را وارد کنیم زیرا این کار انجام می شود

43
00:03:22,270 --> 00:03:23,650
یک تابع ناهمزمان باشد،

44
00:03:23,650 --> 00:03:25,490
ما باید در یک تماس برگشتی عبور کنیم.

45
00:03:25,690 --> 00:03:33,070
بنابراین در اینجا به جای آن شناسه تولید خود را می گذرانم و سپس محصول را در نهایت و در آن تابع دریافت خواهم کرد

46
00:03:33,070 --> 00:03:35,790
در اینجا، من اکنون به سادگی آن را برای لحظه ثبت می کنم

47
00:03:35,860 --> 00:03:39,430
تا ببینیم که آیا آن به درستی بازیابی شده است یا خیر.

48
00:03:39,460 --> 00:03:41,850
بنابراین به صفحه محصولات برگردید،

49
00:03:42,010 --> 00:03:43,890
بیایید دوباره جزئیات را مشاهده کنیم،

50
00:03:43,960 --> 00:03:44,940
که کار می کند

51
00:03:45,100 --> 00:03:50,000
و در لاگ کنسول روی سرور، ما در واقع جزئیات محصولی را که بارگذاری کرده ایم، می بینیم،

52
00:03:50,170 --> 00:03:51,660
بنابراین به نظر می رسد این کار می کند.

53
00:03:51,670 --> 00:03:57,390
اکنون اجازه دهید همچنین بررسی کنیم که اگر محصول دیگری را در اینجا اضافه کنیم، همچنان کار می کند.

54
00:04:09,210 --> 00:04:14,840
من این را اضافه می کنم و در واقع ما محصول را در اینجا می بینیم، بنابراین این کار می کند و اکنون اگر کلیک کنم

55
00:04:14,970 --> 00:04:19,960
لینک جزئیات اینجا در صفحه محصولات،

56
00:04:20,020 --> 00:04:24,850
من همچنین اطلاعات این محصول را دریافت می کنم و لینک تصویر در اینجا بسیار طولانی است زیرا اینطور نیست

57
00:04:24,880 --> 00:04:32,320
نشانی اینترنتی یک تصویر ذخیره شده در یک سرور اما در واقع تصویر کدگذاری شده در base64 که مانند یک متن است.

58
00:04:32,320 --> 00:04:33,940
تکنیک رمزگذاری شما می توانید بگویید.

59
00:04:34,240 --> 00:04:38,640
بنابراین این محصول است و این عملکرد محصول واکشی ما کار می کند.

60
00:04:38,640 --> 00:04:39,610
بنابراین به عنوان مرحله بعدی

61
00:04:39,610 --> 00:04:45,130
بیایید یک نمای اضافه کنیم که جزئیات را نشان دهد و بدیهی است که با خیال راحت ویدیو را متوقف کنید یا آن را انجام دهید

62
00:04:45,160 --> 00:04:50,350
خوب این ویدیو در اینجا به پایان می رسد، اما برای اینکه ادامه دهید و این کار را خودتان انجام دهید، ما آن را با هم در سخنرانی بعدی انجام خواهیم داد.