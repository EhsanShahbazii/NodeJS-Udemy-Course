1
00:00:02,260 --> 00:00:09,270
اکنون یاد گرفتید که چگونه می توانید اطلاعات محصول را با خارج کردن آن اطلاعات از آدرس اینترنتی نمایش دهید،

2
00:00:09,580 --> 00:00:13,270
اکنون برای افزودن یک محصول به سبد خرید مشکل مشابهی داریم.

3
00:00:13,300 --> 00:00:19,870
ما دکمه افزودن به سبد خرید را دریافت می‌کنیم، اما در پایان هنگام ارسال داده‌هایمان، می‌خواهیم بدانیم کدام محصول چیست

4
00:00:19,870 --> 00:00:21,790
برای اضافه کردن به سبد خرید

5
00:00:21,790 --> 00:00:25,500
با این حال، در اینجا، من یک درخواست پست ارسال می کنم،

6
00:00:25,500 --> 00:00:30,920
افزودن به سبد خرید یک درخواست پست ارسال می کند و این یک مفهوم مهم دارد،

7
00:00:31,210 --> 00:00:34,940
ما می توانیم داده ها را در بدنه درخواست ارسال کنیم.

8
00:00:35,140 --> 00:00:41,530
این برای درخواست دریافت امکان پذیر نبود اما برای درخواست پست معمولاً از بدنه درخواست استفاده می کنید.

9
00:00:41,530 --> 00:00:45,900
این همان چیزی است که ما هنگام اضافه کردن یک محصول استفاده می کنیم. برای افزودن یک محصول،

10
00:00:45,910 --> 00:00:51,790
ما یک فرم داریم و همانطور که در آنجا ذکر کردم وقتی اولین بار در دوره این را اضافه کردیم، این به طور خودکار

11
00:00:51,790 --> 00:00:57,610
درخواستی به ما می دهد که تمام داده های ورودی و غیره را در بدنه خود قرار می دهد

12
00:00:57,730 --> 00:01:00,010
اما این فقط برای ارسال داده ها کار می کند،

13
00:01:00,010 --> 00:01:05,620
این برای دریافت داده در دسترس نیست، اما برای ارسال داده، بنابراین نیازی به اضافه کردن چیزی نداریم

14
00:01:05,620 --> 00:01:13,090
به url زیرا می توانیم اطلاعات را در متن پست قرار دهیم. بنابراین، آنچه باید در مورد محصول انجام دهیم

15
00:01:13,090 --> 00:01:19,610
جزئیات این فرم این است که ما باید به سادگی برخی از اطلاعات مهم را به عنوان بخشی از درخواست پست ارسال کنیم.

16
00:01:19,870 --> 00:01:25,270
بنابراین من یک ورودی را در اینجا اضافه می کنم و آن را از نوع مخفی می کنم تا واقعاً نمایش داده نشود

17
00:01:25,270 --> 00:01:33,610
صفحه اما همچنان در درخواستی که در حال ارسال است کدگذاری شده است و من نام محصول را به آن می‌دهم

18
00:01:33,640 --> 00:01:35,390
شناسه، نام به شما بستگی دارد

19
00:01:35,530 --> 00:01:40,810
و اکنون ما همچنین باید یک مقدار را در اینجا ذخیره کنیم و آن مقدار مقداری خواهد بود که به درخواست اضافه می شود

20
00:01:41,020 --> 00:01:42,560
برای آن شناسه محصول

21
00:01:43,330 --> 00:01:46,880
و در اینجا دوباره از ejs برای خروجی شناسه محصول استفاده خواهم کرد

22
00:01:46,980 --> 00:01:55,050
چون من هنوز هم می‌خواهم آن شناسه را به بک‌اندم منتقل کنم، بنابراین به برنامه node express خود، اما نمی‌خواهم

23
00:01:55,050 --> 00:01:59,330
برای استفاده از url زیرا من از درخواست ارسال استفاده می کنم بنابراین نیازی به استفاده از آن نیست.

24
00:01:59,340 --> 00:02:00,400
با این حال شما می توانید آن را انجام دهید،

25
00:02:00,420 --> 00:02:04,290
همچنین می توانید یک بخش پویا برای درخواست های پست اضافه کنید،

26
00:02:04,380 --> 00:02:05,410
آن نیز کار خواهد کرد

27
00:02:05,490 --> 00:02:07,470
اما نیازی به انجام آن در اینجا نیست.

28
00:02:07,860 --> 00:02:16,810
پس بیایید آن داده را با آن ورودی مخفی ارسال کنیم و اکنون روی backend فایل shop.js خود کار کنیم.

29
00:02:17,310 --> 00:02:23,280
آنجا ما سبد خرید گرفتیم، اما دریافت سبد خرید مسیری نیست که در حال حاضر روی آن کار می کنیم،

30
00:02:23,280 --> 00:02:25,680
ما از آن برای نمایش سبد خرید استفاده خواهیم کرد

31
00:02:25,770 --> 00:02:27,710
اما در حال حاضر به یک درخواست پست نیاز دارم.

32
00:02:27,840 --> 00:02:31,470
بنابراین بیایید یک مسیر جدید اضافه کنیم که درخواست پست را می‌پذیرد،

33
00:02:31,470 --> 00:02:33,620
هنوز برای رسیدن به / سبد خرید،

34
00:02:33,660 --> 00:02:40,080
این تغییر نمی کند اما اکنون ما به یک تابع کنترلر جدید نیاز داریم و یکی را در اینجا اضافه می کنیم.

35
00:02:40,260 --> 00:02:43,540
شاید نزدیک به سبد خرید، شاید جلوی آن یا بعد از آن

36
00:02:43,560 --> 00:02:44,670
این به شما بستگی دارد،

37
00:02:44,790 --> 00:02:48,400
سبد خرید پست صادراتی

38
00:02:48,590 --> 00:02:55,720
و در آنجا نیز پاسخ درخواست و تابع بعدی را به عنوان آرگومان دریافت خواهم کرد. و در اینجا

39
00:02:55,880 --> 00:03:02,540
اکنون باید شناسه محصول را از درخواست دریافتی بازیابی کنیم و سپس آن محصول را واکشی کنیم

40
00:03:02,780 --> 00:03:04,210
در پایگاه داده ما،

41
00:03:04,250 --> 00:03:10,740
بنابراین در فایل ما و آن را به سبد خرید ما اضافه کنید. هرچند هنوز گاری نداریم

42
00:03:10,850 --> 00:03:13,100
بنابراین این نیز چیزی است که ما باید روی آن کار کنیم.

43
00:03:13,340 --> 00:03:16,340
در حال حاضر اجازه دهید به سادگی داده ها را به عنوان اولین قدم استخراج کنیم،

44
00:03:17,370 --> 00:03:25,330
شناسه prod با دسترسی به درخواست و اکنون از آنجایی که بخشی از بدنه درخواست است، در اینجا به بدنه درخواست دسترسی خواهیم داشت

45
00:03:25,750 --> 00:03:31,640
و سپس شناسه محصول چون شناسه محصول نامی است که من استفاده می کنم

46
00:03:31,690 --> 00:03:41,070
به نظر من در اینجا در ورودی پنهان. بنابراین در اینجا، من این را در دسترس قرار دادم،

47
00:03:41,100 --> 00:03:44,770
من می توانم این را برای لحظه ای ثبت کنم

48
00:03:49,670 --> 00:03:53,220
و پس از آن می توانم به سادگی تغییر مسیر دهم،

49
00:03:53,320 --> 00:04:03,380
ممکن است فقط به /cart در اینجا بپردازید و سپس مسیر دریافت را بارگیری کنید، بنابراین صفحه سبد خرید را نمایش می دهد. بنابراین

50
00:04:03,380 --> 00:04:09,770
با آن اجازه دهید به فایل routes برگردیم و اکشن کنترلر ایجاد شده جدید را با آن وصل کنیم

51
00:04:09,770 --> 00:04:10,900
مسیر پست آنجا،

52
00:04:11,120 --> 00:04:13,570
بنابراین سبد خرید باید در اینجا متصل شود

53
00:04:13,760 --> 00:04:18,680
و حالا اگر آن را ذخیره کنید و به صفحه جزئیات بازگردید

54
00:04:18,820 --> 00:04:20,230
و در حال حاضر فقط وجود دارد

55
00:04:20,260 --> 00:04:21,390
این دکمه کار خواهد کرد

56
00:04:21,580 --> 00:04:27,820
و شما روی افزودن به سبد خرید کلیک کنید، من در صفحه سبد خرید هستم و در کنسول آن شناسه تصادفی را می بینیم که

57
00:04:27,820 --> 00:04:30,840
تولید شده، آن عدد تصادفی ثبت می شود.

58
00:04:30,850 --> 00:04:32,020
بنابراین این کار می کند،

59
00:04:32,140 --> 00:04:36,760
اکنون بدیهی است که ما در حال حاضر آن را در یک سبد خرید ذخیره نمی کنیم

60
00:04:37,030 --> 00:04:42,910
و قبل از اینکه روی آن کار کنیم، اجازه دهید در واقع به صفحه جزئیات محصول برگردیم و کل فرم را بگیریم

61
00:04:42,960 --> 00:04:50,380
در اینجا و مطمئن شوید که از آن فرم در همه جاهایی که دکمه های افزودن به سبد خرید نیز داریم استفاده می کنیم.

62
00:04:50,440 --> 00:04:53,600
پس بیایید آن را به فایل product list.ejs اضافه کنیم،

63
00:04:53,650 --> 00:04:54,730
اکنون مهم است

64
00:04:54,920 --> 00:04:58,130
در آنجا شناسه محصول نیز موجود است،

65
00:04:58,210 --> 00:05:05,650
بنابراین من به یک فیلد محصول نیز دسترسی دارم، بنابراین این در اینجا کار می کند و بیایید آن را به index.ejs و آنجا اضافه کنیم

66
00:05:05,820 --> 00:05:11,130
من همچنین شی محصول را در دسترس دارم که در حال حاضر همیشه مهم است، البته چون من هستم

67
00:05:11,150 --> 00:05:20,600
دسترسی به شناسه محصول در اینجا و از آنجایی که در هر سه نما دقیقاً برابر است، می‌توانیم یک افزودن شامل اضافه نیز اضافه کنیم

68
00:05:20,690 --> 00:05:28,310
ejs را سبد خرید کنید و کل کد را در آن عبارت در اینجا قرار دهید و سپس به سادگی آن را وارد کنید.

69
00:05:28,340 --> 00:05:38,580
بنابراین به جای اینکه آن کد را در اینجا در index.ejs داشته باشیم، می‌توانیم از تگ ejs با علامت منهای برای افزودن شامل استفاده کنیم.

70
00:05:38,690 --> 00:05:45,500
و سپس به یک سطح بالا می رویم و سپس وارد می شویم و سپس به سبد خرید اضافه می کنیم و از آن استفاده می کنیم

71
00:05:45,500 --> 00:05:54,790
همین کد همچنین در صفحه جزئیات محصول در اینجا و همچنین در صفحه لیست محصول.

72
00:05:54,830 --> 00:05:59,460
بنابراین در آنجا من نیز می خواهم این فرم را با شامل خود جایگزین کنم.

73
00:05:59,460 --> 00:06:02,280
حالا بیایید ببینیم که آیا هنوز کار می کند، اگر من اکنون به سراغ محصولات بروم،

74
00:06:03,380 --> 00:06:09,140
اکنون این خطا را دریافت می کنیم زیرا اگر شما یک شامل در یک حلقه for یا در یک حلقه به طور کلی مانند ما داشته باشید

75
00:06:09,140 --> 00:06:14,540
در اینجا، ما در حال حلقه زدن از طریق تمام محصولات هستیم و سپس محصول یک متغیر محلی موجود در آن حلقه است

76
00:06:14,570 --> 00:06:17,680
فقط، سپس در شامل، در حلقه گنجانده شده است

77
00:06:17,690 --> 00:06:24,960
متأسفانه به طور پیش‌فرض آن متغیر را دریافت نمی‌کند، اما می‌توانید آن را به این متغیر در اینجا و منتقل کنید

78
00:06:24,980 --> 00:06:32,030
می توانید این کار را با اضافه کردن یک آرگومان دوم به تابع include انجام دهید که در آن دوباره یک شی و ارسال می کنید

79
00:06:32,030 --> 00:06:34,470
به سادگی آن متغیر را دوباره اضافه کنید.

80
00:06:34,580 --> 00:06:40,190
بنابراین در اینجا این محصول چیزی است که در شامل و در سمت راست، شما یا شما موجود خواهد بود

81
00:06:40,190 --> 00:06:47,030
مقداری را که در این فایل در دسترس دارید اضافه کنید، بنابراین محصول در حلقه اکنون به محصول در شامل ارسال می شود.

82
00:06:47,930 --> 00:06:53,900
این البته باید برای همه شامل ما انجام شود، بنابراین در فایل index.ejs و نه برای

83
00:06:53,900 --> 00:06:57,240
یکی در جزئیات محصول اما چون در داخل یک حلقه نیست،

84
00:06:57,260 --> 00:06:59,990
بنابراین در سطح جهانی در دسترس است و بنابراین کار می کند

85
00:06:59,990 --> 00:07:07,440
و حالا اگر اینجا بارگذاری مجدد کنیم، این کار می کند، صفحه شروع کار می کند و صفحه جزئیات نیز همچنان کار می کند و

86
00:07:07,430 --> 00:07:10,010
ما می توانیم در تمام این صفحات به سبد خرید برویم.

87
00:07:10,380 --> 00:07:11,430
این خوب به نظر می رسد،

88
00:07:11,760 --> 00:07:16,970
ما همچنین در حال خروجی ID در اینجا هستیم، بنابراین این کار می کند. اکنون به عنوان گام بعدی، ما باید روی آن سبد خرید کار کنیم.