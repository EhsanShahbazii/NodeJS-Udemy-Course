1
00:00:02,130 --> 00:00:08,730
بنابراین به پروژه برگردیم، اجازه دهید سرور توسعه را ترک کنم زیرا اکنون باید بسته دیگری را نصب کنم و این کار را خواهم کرد

2
00:00:08,730 --> 00:00:13,070
به سادگی این سه موتور قالب را نصب کنید تا بتوانیم با آنها کار کنیم.

3
00:00:13,140 --> 00:00:20,640
بنابراین اجازه دهید آنها را با npm install --save نصب کنیم زیرا هر سه موتور بخشی از گره ما هستند

4
00:00:20,670 --> 00:00:24,890
کد و در پایان با کدی که در برخی از رایانه ها مستقر می کنیم ارسال می شود،

5
00:00:25,260 --> 00:00:31,800
بنابراین اجازه دهید آنها را به عنوان وابستگی های تولید نصب کنیم و در آنجا باید EJS را نصب کنیم، این بسته است

6
00:00:31,800 --> 00:00:38,190
نام و لینک به وب سایت های این بسته ها با مستندات بیشتر نیز در آخرین موجود است

7
00:00:38,700 --> 00:00:40,070
سخنرانی این ماژول

8
00:00:40,320 --> 00:00:45,200
بنابراین EJS، سپس ما نیز میناکاری و فرمان گرفتیم،

9
00:00:45,210 --> 00:00:49,350
یک بسته فرمان وجود دارد، اما در واقع یک بسته اشتباه است، ما نیاز داریم

10
00:00:49,350 --> 00:00:56,580
Express-handlebars در اینجا زیرا این دارای یکپارچه سازی داخلی با Express، EJS و pug است

11
00:00:56,580 --> 00:00:58,730
آن را در بسته های اصلی خود دارند

12
00:00:58,740 --> 00:00:59,730
شما می توانید بگویید.

13
00:00:59,940 --> 00:01:04,110
پس حالا اینتر را بزنید و حالا این سه بسته دانلود می شود.

14
00:01:04,110 --> 00:01:08,280
اکنون آنچه می توانید در اینجا مشاهده کنید این است که البته می توانید چندین بسته را همزمان نصب کنید

15
00:01:08,280 --> 00:01:12,570
با تکرار ساده یا با افزودن همه نام‌ها پس از نصب npm،

16
00:01:12,690 --> 00:01:17,690
اکنون بسته ها نصب شده اند و ما از همه آنها به طور همزمان استفاده نمی کنیم بلکه یکی پس از دیگری استفاده می کنیم

17
00:01:17,730 --> 00:01:25,590
ما می‌توانیم به نحوه کار آنها نگاه دقیقی بیندازیم و بیایید با عجیب‌ترین بسته، پاگ شروع کنیم. برای استفاده از آن،

18
00:01:25,950 --> 00:01:27,740
باید به فایل app.js برویم

19
00:01:27,780 --> 00:01:30,300
و اکنون باید به expressjs اطلاع دهیم

20
00:01:30,330 --> 00:01:36,270
و این یک ویژگی اکسپرس است، نه گره، دلیل قوی دیگری است که چرا می خواهیم از express استفاده کنیم

21
00:01:36,270 --> 00:01:39,780
با گره، گره مستقل، این کار سخت تر خواهد بود،

22
00:01:39,780 --> 00:01:42,300
در اینجا باید همه این کارها را به صورت دستی انجام دهید

23
00:01:42,390 --> 00:01:48,270
ما فقط می توانیم بگوییم express hey ما یک موتور قالب داریم که مطابق با اکسپرس است و این همان است

24
00:01:48,270 --> 00:01:49,730
کیس برای هر سه ما نصب کردیم

25
00:01:49,730 --> 00:01:52,850
بنابراین لطفا از آن برای رندر قالب های پویا استفاده کنید.

26
00:01:52,890 --> 00:01:54,700
ما این کار را با رفتن به app.js انجام می دهیم

27
00:01:54,740 --> 00:02:02,550
و بعد از اینکه برنامه اکسپرس خود را در اینجا ایجاد کردیم و آن را در برنامه ثابت ذخیره کردیم، می توانیم یک جهانی تنظیم کنیم

28
00:02:02,700 --> 00:02:04,740
مقدار پیکربندی

29
00:02:04,740 --> 00:02:12,000
حالا اون چیه؟ مجموعه برنامه به ما این امکان را می دهد که هر مقدار را به صورت جهانی در برنامه اکسپرس خود تنظیم کنیم

30
00:02:12,060 --> 00:02:16,340
و این در واقع می تواند کلیدها یا موارد پیکربندی نیز باشد

31
00:02:16,350 --> 00:02:17,960
اکسپرس نمی فهمد،

32
00:02:17,970 --> 00:02:19,520
در این صورت فقط آنها را نادیده می گیرد

33
00:02:19,590 --> 00:02:23,890
اما ما در واقع می‌توانیم آنها را از شی برنامه با app get بخوانیم

34
00:02:24,030 --> 00:02:29,310
و این روش دیگری برای به اشتراک گذاری داده ها در برنامه ما خواهد بود، اما واقعاً چیزی نیست که من به آن علاقه مند باشم

35
00:02:29,310 --> 00:02:30,230
در اینجا.

36
00:02:30,270 --> 00:02:35,210
کاری که می توانیم انجام دهیم این است که می توانیم از چند نام کلید رزرو شده در اینجا استفاده کنیم،

37
00:02:35,250 --> 00:02:40,780
بنابراین آیتم‌های پیکربندی را می‌توانیم تنظیم کنیم که منجر به رفتار متفاوت Expressj‌ها شود

38
00:02:41,040 --> 00:02:43,970
و لیستی از همه این موارد را در اینجا در این جدول می بینید.

39
00:02:44,010 --> 00:02:46,370
در حال حاضر اکثر آنها واقعاً برای ما اینجا مهم نیستند

40
00:02:46,410 --> 00:02:53,670
اما به راحتی می توانید آن را مرور کنید، برای ما جالب موتور view و کلید view ها است.

41
00:02:53,670 --> 00:03:00,350
View engine به ما این امکان را می‌دهد که برای هر قالب پویا که می‌خواهیم رندر کنیم و آنجا می‌خواهیم به Express Hey بگوییم

42
00:03:00,360 --> 00:03:02,810
یک عملکرد ویژه برای انجام آن خواهد بود،

43
00:03:02,820 --> 00:03:09,840
لطفاً از این موتوری که در اینجا ثبت می‌کنیم استفاده کنید و views به ما اجازه می‌دهد که بگوییم کجا این پویا را پیدا کنیم

44
00:03:09,880 --> 00:03:16,640
دیدگاه ها بنابراین کاری که می‌توانیم در اینجا انجام دهیم این است که می‌توانیم برنامه را تنظیم و نمای را در اینجا تنظیم کنیم،

45
00:03:16,680 --> 00:03:22,230
مشاهده موتور به یک رشته، میناکاری.

46
00:03:22,360 --> 00:03:24,410
حالا شما نمی توانید چیزی را در اینجا وارد کنید،

47
00:03:24,520 --> 00:03:31,390
ما در اینجا از pug استفاده می کنیم زیرا موتور قالب بندی پاگ را نصب کرده ایم و این موتور در واقع با ساخته شده ارسال می شود

48
00:03:31,420 --> 00:03:35,690
در پشتیبانی اکسپرس و خودکار خود را با express ثبت می کند

49
00:03:35,710 --> 00:03:36,660
بنابراین می گویند.

50
00:03:36,740 --> 00:03:38,220
بنابراین به همین دلیل است که این کار می کند،

51
00:03:38,320 --> 00:03:43,680
این برای همه موتورها کار نمی کند، اما در پیوندهای آخرین سخنرانی، اینجا، موارد بیشتری را خواهید یافت

52
00:03:43,690 --> 00:03:44,540
کار می کند،

53
00:03:44,550 --> 00:03:49,250
pug خارج از جعبه پشتیبانی می شود و با آن، ما در حال حاضر آماده حرکت هستیم.

54
00:03:49,450 --> 00:03:55,410
ما می‌توانیم یک پیکربندی اضافی تنظیم کنیم، اما می‌توانیم به Express اطلاع دهیم که در آن دیدگاه‌های خود را پیدا کنیم،

55
00:03:55,420 --> 00:04:03,700
با این حال، تنظیمات پیش‌فرض اینجا در این ستون آخر، تنظیمات پیش‌فرض برای نماها از قبل، اساساً ما است

56
00:04:03,700 --> 00:04:06,410
دایرکتوری اصلی ما و سپس پوشه views،

57
00:04:06,670 --> 00:04:12,580
هنوز هم من آن را به صراحت اینجا می فرستم تا به شما نشان دهم اگر دیدگاه های خود را در آن ذخیره کنید، چگونه کار می کند

58
00:04:12,580 --> 00:04:19,090
پوشه دیگری که view نامیده نمی شود بلکه شاید قالب یا هر چیز دیگری باشد که باید این پیکربندی را تنظیم کنید

59
00:04:19,120 --> 00:04:19,940
مورد اینجا، اوه

60
00:04:19,990 --> 00:04:25,490
این یکی و اینجا، من آن را نیز تنظیم می کنم، حتی اگر نیازی به آن نباشد، زیرا views پیش فرض است.

61
00:04:25,810 --> 00:04:32,080
بنابراین اکنون به express می‌گوییم که می‌خواهیم قالب‌های پویا را با موتور پاگ و کجا کامپایل کنیم

62
00:04:32,080 --> 00:04:33,950
برای پیدا کردن این قالب ها

63
00:04:34,000 --> 00:04:37,310
البته آخرین مرحله این است که ما قالب ها را اضافه می کنیم،

64
00:04:37,390 --> 00:04:43,200
پس بیایید به view ها برویم و یک فایل shop.pug را در اینجا اضافه کنیم.

65
00:04:43,480 --> 00:04:49,920
بنابراین ما اکنون یک فایل قالب داریم و اکنون pug در واقع با html معمولی متفاوت عمل می کند.

66
00:04:49,960 --> 00:04:54,190
بنابراین نمی توانم کل این کد html را کپی کنم.

67
00:04:54,190 --> 00:05:00,670
نکته خوب در IDE من در اینجا است اگر html را در فایل shop.pug تایپ کنم و سپس

68
00:05:00,670 --> 00:05:02,810
من از این قالب html5 استفاده میکنم

69
00:05:02,890 --> 00:05:05,300
من یک ساختار میناکاری از این دریافت می کنم

70
00:05:05,320 --> 00:05:08,700
و در اینجا ما قبلاً حداقل نحو html را می بینیم.

71
00:05:08,800 --> 00:05:10,800
ما هیچ تگ معمولی html دریافت نمی کنیم

72
00:05:10,930 --> 00:05:16,250
اما به خاطر داشته باشید که موتور قالب‌سازی پاگ کد ما را به html معمولی در کامپایل می‌کند

73
00:05:16,250 --> 00:05:21,990
پایان. بنابراین این اینجا اساساً معادل این قسمت در اینجا است

74
00:05:22,000 --> 00:05:25,460
شما می توانید بگویید، به جز واردات شیوه نامه.

75
00:05:25,630 --> 00:05:28,260
اگر بخواهیم اینها را اضافه کنیم، اینجا هم می توانیم این کار را انجام دهیم

76
00:05:28,420 --> 00:05:30,420
و خوشبختانه، IDE در اینجا به من کمک می کند،

77
00:05:30,460 --> 00:05:36,100
اگر لینک را تایپ کنم و tab را بزنم، یک اجرای Pug مطابق با آن دریافت می کنم.

78
00:05:36,100 --> 00:05:39,100
بنابراین در اینجا اکنون می توانم پیوندهای خود را نیز اضافه کنم،

79
00:05:39,100 --> 00:05:42,030
مسیرهای البته به فایل های css

80
00:05:42,030 --> 00:05:44,300
مانند قبل هستند.

81
00:05:44,530 --> 00:05:47,900
بنابراین، اکنون ما pug را چگونه نصب کردیم و چگونه آن را اضافه کردیم،

82
00:05:48,140 --> 00:05:54,610
حالا اجازه دهید این فایل را به سرعت تمام کنیم تا شبیه این فایل شود قبل از اینکه واقعاً نگاهی به چگونگی آن بیندازیم

83
00:05:54,610 --> 00:05:56,530
می توانیم محتوای پویا اضافه کنیم.

84
00:05:56,770 --> 00:06:04,520
بنابراین بیایید این پیوند را در اینجا تکرار کنیم و فایل product.css را وارد کنیم و اکنون برای بدنه،

85
00:06:04,850 --> 00:06:11,460
در اینجا من یک هدر دریافت کردم و این ناحیه اصلی را دریافت کردم، بنابراین بیایید این را به سرعت در پاگ تکرار کنیم.

86
00:06:11,460 --> 00:06:15,460
برای این در بدن، فرورفتگی در پاگ مهم است،

87
00:06:15,550 --> 00:06:20,880
شما اساساً تودرتوی html خود را با سطوح تورفتگی در اینجا ساختار می دهید،

88
00:06:21,030 --> 00:06:23,820
بنابراین اگر هد در html تو در تو باشد، اینطور است

89
00:06:23,820 --> 00:06:24,500
تورفتگی

90
00:06:24,610 --> 00:06:28,170
و اگر متا در head تو در تو باشد، تورفتگی نیز دارد.

91
00:06:28,330 --> 00:06:30,680
اگر در یک سطح باشند، خواهر و برادر هستند،

92
00:06:30,700 --> 00:06:32,150
بنابراین این روش کار می کند.

93
00:06:32,200 --> 00:06:39,100
بنابراین اگر می‌خواهید چیزی را به بدن اضافه کنید و نه در کنار آن، باید در اینجا تورفتگی ایجاد کنیم و سپس من را اضافه می‌کنم

94
00:06:39,100 --> 00:06:46,570
هدر که دارای این کلاس هدر اصلی است، بنابراین اگر دوباره یکی دیگر از ویژگی های مفید IDE را تایپ کنم، ویژوال است

95
00:06:46,570 --> 00:06:47,340
کد استودیو،

96
00:06:47,380 --> 00:06:54,010
اگر نقطه و سپس نام را مانند این تایپ کنم و تب را بزنم، به نظر می رسد که هیچ کاری انجام نداده است.

97
00:06:54,010 --> 00:06:58,350
اما در واقع این نمایش یک div با این کلاس است،

98
00:06:58,370 --> 00:07:02,270
حالا من یک هدر با این کلاس می‌خواهم، بنابراین فقط هدر می‌نویسم.

99
00:07:02,380 --> 00:07:06,300
بنابراین این نحو عجیب یک عنصر هدر با ایجاد خواهد کرد

100
00:07:06,300 --> 00:07:11,860
این کلاس css و این چیزی است که باید به آن عادت کنید و من به شدت غواصی را توصیه می کنم

101
00:07:11,860 --> 00:07:13,570
به اسناد رسمی پاگ

102
00:07:13,570 --> 00:07:19,870
اگر می خواهید به آن پایبند باشید، اتفاقاً اینجا عنوان را با فروشگاه خود جایگزین می کنم.

103
00:07:20,310 --> 00:07:25,010
بنابراین اجازه دهید نه تنها هدر، بلکه nav، لیست نامرتب و غیره را نیز اضافه کنیم.

104
00:07:26,010 --> 00:07:32,030
برای این کار در هدر می‌خواهم چیزی را تودرتو کنم، بنابراین بیایید یک سطح تورفتگی و سپس نقطه لیست نامرتب اضافه کنیم

105
00:07:32,090 --> 00:07:33,830
و کلاس

106
00:07:33,830 --> 00:07:37,640
و در حال حاضر همان، اوه که nav فهرست نامرتب نبود

107
00:07:37,640 --> 00:07:39,920
بنابراین باید یک مورد ناوبری باشد.

108
00:07:39,980 --> 00:07:41,620
حالا برای لیست نامرتب،

109
00:07:41,720 --> 00:07:43,240
بیایید آن کلاس را انتخاب کنیم،

110
00:07:43,430 --> 00:07:44,390
بیایید به آنجا برویم و

111
00:07:44,390 --> 00:07:45,760
باید در ناو تودرتو باشد.

112
00:07:45,800 --> 00:07:48,320
پس بیایید تورفتگی، نقطه لیست نامرتب را ایجاد کنیم

113
00:07:48,350 --> 00:07:49,290
نام کلاس

114
00:07:49,400 --> 00:07:51,330
و اکنون موارد لیست را دریافت می کنیم،

115
00:07:51,350 --> 00:07:54,920
بنابراین در اینجا اجازه دهید دوباره آیتم فهرست را در اینجا انتخاب کنیم

116
00:07:55,790 --> 00:08:00,790
یا کلاس روی آن، تورفتگی به دلیل اینکه در لیست نامرتب تو در تو قرار دارد، مورد فهرست نقطه

117
00:08:00,830 --> 00:08:01,980
و بعد کلاس

118
00:08:02,180 --> 00:08:08,030
و اکنون آخرین اما نه کم‌اهمیت، من تگ anchor را دارم که کلاس فعال را نیز دارد اما پس از آن نیز کلاس فعال را دارد

119
00:08:08,060 --> 00:08:10,310
باید محتوای متنی در آن باشد

120
00:08:10,400 --> 00:08:12,500
و سپس یک لینک نیز داشته باشید.

121
00:08:12,740 --> 00:08:14,350
پس بیایید اکنون به آنجا برویم،

122
00:08:14,390 --> 00:08:21,950
این تگ لنگر و کلاس را تودرتو قرار دهید، اگر تب را بزنید، به طور خودکار، این نماد ویژگی است،

123
00:08:21,980 --> 00:08:30,400
بنابراین در پرانتز بعد از تگ anchor یا بعد از هر عنصر اما همیشه بدون هیچ فضای خالی در بین،

124
00:08:30,500 --> 00:08:34,330
این به شما اجازه می دهد تا ویژگی هایی را به عنصر HTML اضافه کنید،

125
00:08:34,340 --> 00:08:38,420
بنابراین در اینجا این باید فقط به اسلش برود و اکنون برای محتوای متن،

126
00:08:38,480 --> 00:08:40,290
می توانید این را در کنار آن اضافه کنید

127
00:08:40,340 --> 00:08:47,410
پس اینجوری خرید کن این اساساً این متن را بین تگ لنگر باز و بسته قرار می دهد.

128
00:08:47,410 --> 00:08:50,530
اکنون این تنظیماتی است که می خواهم اینجا داشته باشم،

129
00:08:50,620 --> 00:08:52,480
البته ما دو مورد لیست داریم،

130
00:08:52,490 --> 00:08:55,980
ما همچنین محصولی را اضافه کردیم که به این پیوند منتهی می شود،

131
00:08:56,200 --> 00:08:58,790
بنابراین من باید این را تکرار کنم.

132
00:08:58,920 --> 00:09:01,190
بنابراین در کنار اولین مورد لیست، اضافه می کنم

133
00:09:01,600 --> 00:09:06,100
یکی دیگر، آیتم هدر اصلی و سپس من تگ لنگر خود را دارم،

134
00:09:06,160 --> 00:09:09,230
این یکی بدون کلاس فعال، فقط با لینک

135
00:09:09,340 --> 00:09:19,010
و در آنجا، من می گویم محصول اضافه کنید. با این اگر npm start را اجرا کنم، چیزی نمی بینیم

136
00:09:19,270 --> 00:09:25,270
و من از این واقعیت آگاهم که محتوای اصلی را اضافه نکردم اما بیایید فعلاً از آن چشم پوشی کنیم. با این

137
00:09:25,280 --> 00:09:32,320
با این حال، ما این الگو را ارائه نمی کنیم زیرا به Express نمی گوییم این کار را انجام دهد. ما به اکسپرس می گوییم

138
00:09:32,560 --> 00:09:36,680
که باید از این موتور قالب استفاده کند هر زمان که ما سعی می کنیم یک الگو را ارائه دهیم

139
00:09:36,820 --> 00:09:38,900
اما ما سعی نمی کنیم این کار را انجام دهیم.

140
00:09:39,250 --> 00:09:40,580
بنابراین در shop.js

141
00:09:40,750 --> 00:09:46,010
جایی که ما تعریف می کنیم که چه پاسخی باید داشته باشد، باید پاسخ را تغییر دهیم زیرا در حال حاضر،

142
00:09:46,020 --> 00:09:48,090
ما در حال ارسال فایل html هستیم،

143
00:09:48,430 --> 00:09:50,220
حالا می خواهیم کار دیگری انجام دهیم.

144
00:09:50,470 --> 00:09:52,560
می توانیم از پاسخ استفاده کنیم

145
00:09:52,720 --> 00:09:55,340
و سپس یک روش رندر ویژه وجود دارد،

146
00:09:55,520 --> 00:10:01,360
این توسط expressjs ارائه می‌شود و از موتور قالب‌بندی پیش‌فرض استفاده می‌کند که به همین دلیل است

147
00:10:01,360 --> 00:10:02,780
برای تعریف آن در اینجا،

148
00:10:02,800 --> 00:10:07,780
از موتور قالب پیش فرض استفاده می کند و سپس آن الگو را برمی گرداند.

149
00:10:07,930 --> 00:10:11,860
و اکنون تعریف کردیم که همه نماها در پوشه views هستند.

150
00:10:11,980 --> 00:10:15,440
ما همچنین مجبور نیستیم مسیری برای آن پوشه بسازیم

151
00:10:15,580 --> 00:10:17,830
در عوض فقط می توانیم بگوییم خرید کنید.

152
00:10:17,890 --> 00:10:22,830
ما همچنین به shop.pug نیاز نداریم زیرا pug را به عنوان موتور قالب پیش فرض تعریف کردیم

153
00:10:22,900 --> 00:10:31,300
بنابراین به دنبال فایل های .pug می گردد. با این کار، اگر صفحه فروشگاه را ذخیره کنیم و دوباره بارگذاری کنیم، هدر را می بینیم،

154
00:10:31,360 --> 00:10:33,690
ما محتوای اصلی را نمی بینیم زیرا ما این را اضافه نکرده ایم

155
00:10:33,880 --> 00:10:35,870
اما بقیه به خوبی کار می کنند.

156
00:10:36,070 --> 00:10:41,590
و اگر این را بررسی کنید یا منبع صفحه را مشاهده کنید، خواهید دید که این کد html معمولی است،

157
00:10:41,740 --> 00:10:47,940
بنابراین این نسخه حداقلی ما نیست که مرورگر قادر به خواندن آن نیست، اما html است

158
00:10:47,950 --> 00:10:52,600
کد پاگ بر اساس آن نسخه حداقلی برای ما ایجاد شده است.

159
00:10:52,600 --> 00:10:56,740
اکنون یک کاری که ما اینجا انجام نمی دهیم این است که چیزی پویا را خروجی نمی دهیم

160
00:10:56,740 --> 00:11:02,050
اما از آنجایی که به همین دلیل است که موتورهای قالب را اضافه کردیم، اجازه دهید این کار را در سخنرانی بعدی نیز انجام دهیم.