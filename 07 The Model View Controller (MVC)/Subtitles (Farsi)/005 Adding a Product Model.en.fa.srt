1
00:00:02,280 --> 00:00:06,650
با اضافه شدن کنترلرها و نماها، وقت آن است که به مدل اهمیت دهید.

2
00:00:06,660 --> 00:00:08,830
مشکل مدل ما این است که ما،

3
00:00:09,120 --> 00:00:10,770
خوب ما یک مورد بسیار ساده داریم،

4
00:00:10,980 --> 00:00:18,930
ما آرایه محصولات خود را در اینجا مدیریت می کنیم و یک محصول به سادگی در پرواز به عنوان یک شی که به نظر می رسد ایجاد می شود

5
00:00:18,930 --> 00:00:20,090
مثل این.

6
00:00:20,130 --> 00:00:23,040
اکنون در پایان، آن محصول داده های ما را نشان می دهد،

7
00:00:23,040 --> 00:00:27,310
ما محصولاتی در برنامه خود داریم، بعداً چیزهای خود را مانند یک کاربر خواهیم داشت

8
00:00:27,360 --> 00:00:29,960
اما در حال حاضر فقط یک محصول است. هنوز

9
00:00:30,000 --> 00:00:35,310
می‌توانیم یک مدل برای آن تعریف کنیم و برای این، اجازه دهید یک پوشه جدید در پروژه ریشه و نام خود ایجاد کنیم

10
00:00:35,310 --> 00:00:36,830
آن را مدل می کند.

11
00:00:36,930 --> 00:00:40,980
البته اکنون همه این نام‌ها قابل مبادله هستند، اما این جدایی را واقعاً واضح می‌کند،

12
00:00:40,980 --> 00:00:46,360
ما کنترلرها را دریافت می کنیم، نماها را دریافت می کنیم، مدل ها را دریافت می کنیم و این الگوی mvc را تشکیل می دهد.

13
00:00:46,500 --> 00:00:48,880
اکنون در آنجا، یک فایل product.js جدید اضافه می کنم

14
00:00:48,920 --> 00:00:50,390
.

15
00:00:50,630 --> 00:00:55,910
اکنون لطفاً توجه داشته باشید که این محصولات در اینجا نیستند زیرا من می خواهم یک نهاد واحد را نمایندگی کنم زیرا در پایان،

16
00:00:55,970 --> 00:00:58,630
داده های اصلی ما یک محصول است.

17
00:00:58,640 --> 00:01:04,280
مطمئناً ما فهرستی از محصولاتی نیز داریم که با آنها کار می کنیم، اما نکته اصلی که برنامه را تشکیل می دهد نحوه کار است

18
00:01:04,280 --> 00:01:11,090
یک محصول به نظر می رسد، چه فیلدهایی دارد، آیا تصویر، عنوان دارد، که داده های اصلی ما هستند. یک لیست

19
00:01:11,090 --> 00:01:17,420
از محصولات خسته کننده است، فقط بیشتر از این نوع است، یک محصول واحد چیزی است که برنامه ما را در آن تعریف می کند

20
00:01:17,420 --> 00:01:20,490
پایان یا بخشی از آنچه برنامه را تعریف می کند.

21
00:01:20,490 --> 00:01:27,860
حالا این مدل چگونه به نظر می رسد؟ در نهایت این کاملا به شما بستگی دارد، شما می توانید این را در هر کدام از آنها تعریف کنید

22
00:01:27,860 --> 00:01:29,450
آنطور که شما می خواهید،

23
00:01:29,720 --> 00:01:34,710
به عنوان مثال می توانید به سادگی یک تابع سازنده را در اینجا صادر کنید،

24
00:01:35,000 --> 00:01:43,770
بنابراین یک تابع که من محصول را نام می برم و شما آن را برای ایجاد اشیاء جدید بر اساس آن با استفاده از ES5 فراخوانی می کنید

25
00:01:43,780 --> 00:01:45,450
تابع سازنده

26
00:01:45,820 --> 00:01:52,990
اما اگر از جاوا اسکریپت نسل بعدی استفاده می کنید، همانطور که من در اینجا این کار را انجام می دهم، در عوض می توانید یک کلاس ایجاد کنید. می توانید ایجاد کنید

27
00:01:53,020 --> 00:01:55,670
یک کلاس به نام محصول که شبیه این است

28
00:01:55,750 --> 00:01:57,600
و این هم اکنون صادر می شود

29
00:01:57,670 --> 00:02:00,450
و اگر مطمئن نیستید کلاس چیست،

30
00:02:00,490 --> 00:02:03,340
در ابتدای دوره، بازخوانی جاوا اسکریپت را بررسی کنید،

31
00:02:03,430 --> 00:02:05,110
اونجا هم توضیح میدم

32
00:02:06,190 --> 00:02:11,870
حالا اینجا در این کلاس، می‌خواهم شکل یک محصول را تعریف کنم و برای این، اول از همه ایجاد می‌کنم

33
00:02:11,870 --> 00:02:13,690
تابع سازنده،

34
00:02:13,690 --> 00:02:19,970
بنابراین در اینجا می خواهم عنوانی برای محصول دریافت کنم که سپس از داخل کنترلر خود ایجاد می کنم.

35
00:02:19,990 --> 00:02:26,800
بنابراین در اینجا من عنوان خود را دریافت می کنم و شما می توانید این عنوان را البته نام ببرید و سپس یک خاصیت در این ایجاد خواهم کرد

36
00:02:26,800 --> 00:02:27,470
کلاس،

37
00:02:27,610 --> 00:02:34,060
بنابراین اساساً مانند یک متغیر در کلاس می توانید بگویید. شما این کار را با کلمه کلیدی this و سپس این عنوان انجام می دهید

38
00:02:34,090 --> 00:02:36,740
برابر با عنوانی است که من در اینجا به عنوان استدلال دریافت می کنم

39
00:02:36,880 --> 00:02:41,710
و لازم نیست این نام ها مطابقت داشته باشند و برای جلوگیری از سردرگمی، می توانید این t را نیز در اینجا نامگذاری کنید.

40
00:02:42,100 --> 00:02:44,440
بنابراین اکنون من در این کلاس یک ویژگی ایجاد می کنم،

41
00:02:44,440 --> 00:02:50,200
این به من اجازه می دهد تا بر اساس این کلاس یک شی ایجاد کنم که در آن عنوان را به سازنده منتقل کنم

42
00:02:50,230 --> 00:02:51,890
که ما با جدید تماس می گیریم

43
00:02:52,330 --> 00:02:55,330
و سپس این در شی ایجاد شده ذخیره می شود.

44
00:02:55,450 --> 00:03:01,450
اما بدیهی است که من فقط نمی خواهم بتوانم اشیایی با عنوان ایجاد کنم، می توانم این کار را با جریان انجام دهم

45
00:03:01,480 --> 00:03:03,420
نحو پرانتز فرفری نیز،

46
00:03:03,790 --> 00:03:13,180
در عوض اینجا می‌خواهم بتوانم محصول خود را ایجاد کنم یا در مجموعه‌ای از محصولات ذخیره کنم و واکشی کنم

47
00:03:13,180 --> 00:03:13,580
آی تی

48
00:03:13,840 --> 00:03:21,010
و برای این، آرایه محصولاتم را دوباره در اینجا معرفی می کنم و بعداً وقتی از یک واقعی استفاده می کنیم، این را تغییر می دهیم

49
00:03:21,010 --> 00:03:21,850
پایگاه داده

50
00:03:22,030 --> 00:03:28,490
اما در حال حاضر اجازه دهید با این رویکرد برویم و من یک متد ذخیره را در اینجا با فراخوانی save or به کلاس خود اضافه می کنم

51
00:03:28,510 --> 00:03:32,370
با تایپ ذخیره، اضافه کردن پرانتز و سپس پرانتزهای فرفری.

52
00:03:32,470 --> 00:03:36,790
بنابراین مانند یک تابع است، فقط بدون کلمه کلیدی تابع.

53
00:03:36,850 --> 00:03:40,700
بنابراین این اکنون یک متد در این کلاس و در متد ذخیره است،

54
00:03:40,810 --> 00:03:48,520
من می‌خواهم محصولم را در این آرایه ذخیره کنم و می‌توانم این کار را با تماس با محصولات و سپس تماس انجام دهم

55
00:03:48,530 --> 00:03:55,210
اینجا را فشار دهید درست همانطور که قبلاً در کنترلر انجام دادیم و من به سادگی این را فشار می دهم زیرا این کار را انجام می دهد

56
00:03:55,210 --> 00:04:02,670
به شیء ایجاد شده بر اساس کلاس مراجعه کنید و این دقیقاً همان شیئی است که من می خواهم در این آرایه ذخیره کنم.

57
00:04:02,700 --> 00:04:07,390
اکنون بدیهی است که من همچنین می خواهم بتوانم همه محصولات را از آن آرایه بازیابی کنم

58
00:04:07,470 --> 00:04:16,440
و من همچنین می‌خواهم این کار را از طریق مدل محصولم انجام دهم، با این حال، در حالی که ذخیره کردن روی یک بتن منطقی است

59
00:04:16,500 --> 00:04:23,670
شیء نمونه سازی شده بر اساس محصول، من همچنین می خواهم یک روش fetch all داشته باشم که مانند ابزار مفید است

60
00:04:23,670 --> 00:04:29,130
عملکرد شما می توانید بگویید. این در یک نمونه از محصول نامیده نمی شود زیرا باید واکشی شود

61
00:04:29,160 --> 00:04:35,460
همه محصولات و من نمی خواهم یک شی جدید با کلمه کلیدی جدید فقط با عنوان ساختگی ایجاد کنم

62
00:04:35,460 --> 00:04:42,150
برای واکشی همه محصولات موجود و بنابراین من کلمه کلیدی ثابتی را که جاوا اسکریپت ارائه می دهد اضافه می کنم

63
00:04:42,150 --> 00:04:49,160
مطمئن می شود که می توانم این متد را مستقیماً روی خود کلاس فراخوانی کنم و نه روی یک شیء نمونه سازی شده

64
00:04:49,500 --> 00:04:55,110
و سپس در اینجا، من این، اوه، محصولات مانند آن را برمی گردم.

65
00:04:56,330 --> 00:04:57,820
حالا این مدل تمام شده است،

66
00:04:57,830 --> 00:05:00,500
حالا بیایید به فایل کنترل کننده محصولات برویم.

67
00:05:00,960 --> 00:05:08,500
در آنجا من اول از همه از شر محصولات اینجا در بالا خلاص می شوم و همچنین محصولات را به پایین می برم زیرا

68
00:05:08,500 --> 00:05:10,050
اکنون می خواهم از مدل خود استفاده کنم،

69
00:05:10,280 --> 00:05:12,090
من هم دیگر به آن نیاز ندارم،

70
00:05:12,990 --> 00:05:17,010
به طوری که هیچ منطق مرتبط با آرایه محصولات در این فایل باقی نمانده است

71
00:05:17,130 --> 00:05:23,090
در عوض، اکنون کلاس خود را با افزودن یک محصول ثابت جدید وارد می کنم و شما می توانید آن را هر طور که می خواهید نام گذاری کنید

72
00:05:23,130 --> 00:05:28,500
اما قرارداد این است که از یک کاراکتر شروع بزرگ برای کلاس ها استفاده کنیم و در پایان، ما فقط وارد می کنیم

73
00:05:28,590 --> 00:05:29,280
این کلاس

74
00:05:29,340 --> 00:05:33,100
بنابراین من کاراکتر بزرگ را در این فایل کنترلر نیز اضافه می کنم

75
00:05:33,150 --> 00:05:41,430
و من یک کلاس را با درخواست از پوشه models، از فایل product.js وارد می کنم. با

76
00:05:41,440 --> 00:05:43,650
که اضافه شد، در پست محصول را اضافه کنید

77
00:05:43,650 --> 00:05:49,710
من اکنون یک شی جدید را بر اساس این طرح کلاس ایجاد می کنم و کلاس ها در نهایت این هستند.

78
00:05:49,800 --> 00:05:58,290
آنها نقشه ها هستند بنابراین من یک محصول جدید ایجاد خواهم کرد، یک ثابت محلی با محصول جدید و وجود خواهد داشت

79
00:05:58,290 --> 00:06:06,460
عنوان بدنه درخواست پاس را بپذیرد و این به سادگی عنوانی را که من در اینجا دارم به عنوان نام در ورودی من می گیرد که ارسال شده است.

80
00:06:08,680 --> 00:06:12,250
با این کار، ما یک محصول جدید بر اساس کلاس خود ایجاد می کنیم،

81
00:06:12,250 --> 00:06:14,810
اکنون یک کار اضافی وجود دارد که باید انجام شود،

82
00:06:14,890 --> 00:06:18,550
من می خواهم آن را ذخیره کنم و می توانم این کار را با تماس با محصول انجام دهم،

83
00:06:18,670 --> 00:06:28,100
صرفه جویی. این از روش ذخیره سازی که تعریف کردیم استفاده می کند و بنابراین فعلاً آن را روی این آرایه فشار می دهد.

84
00:06:28,120 --> 00:06:36,100
اکنون با آن در get products، من همچنین می خواهم همه محصولات را واکشی کنم. بنابراین من یک ثابت محلی جدید، محصولات و

85
00:06:36,100 --> 00:06:40,510
اکنون من از آن روش استاتیک استفاده خواهم کرد زیرا نمی خواهم محصول جدیدی در جایی که داشتم ایجاد کنم

86
00:06:40,510 --> 00:06:44,650
برای تنظیم عنوان ساختگی چون من یک محصول در اینجا ایجاد نمی کنم،

87
00:06:44,710 --> 00:06:48,230
در عوض من فقط می خواهم از محصول استفاده کنم و تماس بگیرم

88
00:06:48,270 --> 00:06:55,000
همه و این باید همه محصولات را به من بدهد و حالا من محصولاتم را اینجا دارم و اگر این را ذخیره کنم، باید

89
00:06:55,000 --> 00:06:59,100
حالا کار کن اگر به عقب برگردم و این صفحه را دوباره بارگیری کنم،

90
00:06:59,110 --> 00:07:00,160
من نمی توانم بخوانم

91
00:07:00,160 --> 00:07:02,210
طول ملک،

92
00:07:02,350 --> 00:07:07,010
منطقی است زیرا fetch all این محصول را برمی گرداند که نادرست است،

93
00:07:07,040 --> 00:07:13,760
فقط باید محصولات را برگرداند زیرا ما در حال برگرداندن این آرایه هستیم، نه برخی از ویژگی های محلی این کلاس،

94
00:07:13,760 --> 00:07:16,620
هیچ خاصیت محصولات وجود ندارد

95
00:07:16,660 --> 00:07:20,950
بنابراین پس از رفع این مشکل و حذف آن، اکنون اگر دوباره بارگذاری کنم

96
00:07:20,950 --> 00:07:24,950
این کار می کند و اگر اکنون سعی کنم اولین کتاب را اضافه کنم،

97
00:07:25,120 --> 00:07:32,330
این دوباره اکنون با استفاده از یک مدل کار می کند. و در حالی که این ممکن است در حال حاضر پیچیده تر به نظر برسد

98
00:07:32,590 --> 00:07:35,480
و مطمئناً به این دلیل است که ما فقط از فضای ذخیره سازی ساختگی خود در اینجا استفاده می کنیم،

99
00:07:35,590 --> 00:07:41,260
وقتی واقعاً مدل‌های پیچیده‌تری با زمینه‌های بیشتر، با روش‌ها و مکان‌های بیشتر دریافت کنید، عالی است

100
00:07:41,260 --> 00:07:43,350
شما آنها را در یک آرایه تصادفی ذخیره نمی کنید

101
00:07:43,480 --> 00:07:49,420
اما از جایی که کل منطق اتصال پایگاه داده و غیره را دریافت کردید، سپس همه آن را در مدل خود قرار می دهید

102
00:07:49,540 --> 00:07:55,360
و لازم نیست در کنترلر خود به آن اهمیت دهید. و در واقع این را با دور شدن شبیه سازی می کند

103
00:07:55,360 --> 00:08:01,390
از ذخیره سازی آرایه ما در اینجا و حداقل قبل از اینکه بعداً در دوره آموزشی باشیم، به سمت ذخیره سازی فایل حرکت کنید

104
00:08:01,420 --> 00:08:02,800
همچنین از یک پایگاه داده واقعی استفاده کنید.