1
00:00:02,130 --> 00:00:09,660
Letton Consed دو ویژگی نسبتا جدید در جاوا اسکریپت هستند و ویژگی جدید بسیار جالب توابع aero هستند.

2
00:00:10,170 --> 00:00:17,250
می‌توانیم این تابع را به‌عنوان یک تابع پیکانی، ابتدا با ایجاد یک متغیر یا ثابت جدید، بازنویسی کنیم.

3
00:00:17,250 --> 00:00:22,930
از آنجایی که من هرگز مقدار جدیدی تنظیم نمی کنم، از یک ثابت استفاده می کنم و نام تابع خود را به آن می دهم.

4
00:00:22,950 --> 00:00:24,300
بنابراین کاربر را خلاصه کنید.

5
00:00:26,680 --> 00:00:31,700
مقداری که پس از علامت مساوی تخصیص داده شده بود اکنون یک تابع است که می توانستیم انجام دهیم

6
00:00:31,720 --> 00:00:33,790
آن را در گذشته با این نحو.

7
00:00:33,820 --> 00:00:35,980
این روش دیگری برای تعریف یک تابع است.

8
00:00:36,310 --> 00:00:42,160
قسمت سمت راست یک تابع به اصطلاح ناشناس است، زیرا ما نامی را پس از آن تنظیم نمی کنیم

9
00:00:42,160 --> 00:00:49,690
تابع، اما ما به طور ضمنی با ذخیره تابع ناشناس در آن نام، آن را به یک تابع با نام تبدیل می کنیم

10
00:00:49,750 --> 00:00:50,550
ثابت.

11
00:00:50,770 --> 00:00:56,050
بنابراین ما همیشه می‌توانیم آن ثابت را که تابعی را به عنوان مقدار نگه می‌دارد و مقدار the را فراخوانی می‌کنیم

12
00:00:56,050 --> 00:00:56,710
نحو.

13
00:00:56,920 --> 00:00:59,050
و بنابراین این مانند یک تابع با نام در اینجا است.

14
00:00:59,560 --> 00:01:01,610
بنابراین این در گذشته نیز کار می کرد.

15
00:01:01,900 --> 00:01:09,430
این یک راه یا روش متفاوتی برای تعریف یک تابع است، اما می‌توانیم از یک نحو جدید نیز استفاده کنیم که در آن حذف می‌کنیم

16
00:01:09,430 --> 00:01:16,990
کلمه کلیدی تابع و در عوض یک فلش بین لیست آرگومان و پرانتزهای فرفری اضافه می کنیم.

17
00:01:17,650 --> 00:01:21,130
و آیا فلش به سادگی علامت تساوی و علامت بزرگتر است.

18
00:01:21,760 --> 00:01:23,350
این نیز یک تابع ایجاد می کند.

19
00:01:23,500 --> 00:01:30,160
از آنجایی که کلمه کلیدی تابع را ذخیره کردیم کمی کوتاهتر است و به همان روشی اجرا می شود که Dysfunction اجرا می شود

20
00:01:30,160 --> 00:01:30,670
قبل از آن.

21
00:01:31,360 --> 00:01:35,860
حالا چرا باید از سینتکس استفاده کنیم مگر به این دلیل که کمی کوتاهتر است؟

22
00:01:36,160 --> 00:01:37,960
خوب، این یک دلیل خوب است.

23
00:01:38,170 --> 00:01:45,220
اما همچنین یک تفاوت کلیدی در مورد این کلمه کلیدی وجود دارد که جاوا اسکریپت می داند و ضمیمه می کند.

24
00:01:45,220 --> 00:01:51,960
شما پیوندی به ویدیوی دیگری پیدا می‌کنید، مقاله‌ای که من ایجاد کردم و در آن به این کلمه کلیدی و چگونگی arole می‌پردازم

25
00:01:51,970 --> 00:01:52,450
کارکرد.

26
00:01:52,450 --> 00:01:53,290
ما را در آن کمک کنید.

27
00:01:53,980 --> 00:01:59,620
مقاله و ویدیوی پیوست شده در واقع از مرورگر استفاده می کند، اما برای بدون jass یکسان است.

28
00:02:00,160 --> 00:02:04,750
بنابراین این برای شما مفید خواهد بود که بدانید اشیاء جاوا اسکریپت برای آن چیست.

29
00:02:04,840 --> 00:02:09,610
اما باز هم، این برخی از دانش اصلی است که من از شما برای گفتمان نیاز دارم.

30
00:02:10,420 --> 00:02:11,290
در این دوره

31
00:02:11,500 --> 00:02:14,380
من تقریباً فقط از توابع arole استفاده خواهم کرد.

32
00:02:14,530 --> 00:02:20,380
بنابراین این نحو برای تعریف یک تابع باید چیزی باشد که شما برای این دوره می فهمید که این است

33
00:02:20,380 --> 00:02:21,700
نام تابع است.

34
00:02:22,000 --> 00:02:25,600
و سپس در اینجا آرگومان ها را داریم و سپس صفحه تابع را داریم.

35
00:02:25,610 --> 00:02:32,380
می دانید، یک یادداشت جانبی کوچک، همچنین نحو کوتاه تری برای نوشتن این یا چند کلمه کوتاه تر وجود دارد

36
00:02:32,380 --> 00:02:33,100
نحوها

37
00:02:35,290 --> 00:02:41,560
فرض کنید من تابع دیگری دارم که اسم آن را add می‌کنم و در آنجا دو آرگومان A و B و

38
00:02:41,560 --> 00:02:43,180
من فقط به برخی از آنها باز می گردم.

39
00:02:43,190 --> 00:02:51,340
بنابراین، می توانید A را بنویسید، A به علاوه B، و این به ما اجازه می دهد کنسول را اجرا کنیم

40
00:02:51,340 --> 00:02:53,830
قفل آگهی با یک به علاوه دو.

41
00:02:54,670 --> 00:03:00,760
و اگر من اکنون نود پلی جاز را اجرا کنم، در نتیجه اینجا رایگان می بینیم.

42
00:03:01,730 --> 00:03:07,510
اگر فقط یک تابع eral با یک دستور دارید که اتفاقاً عبارت بازگشتی است یا کدام

43
00:03:07,510 --> 00:03:15,250
شما خوب برگشتید، خوب، پس می توانید بریس های فرفری را تصویر کنید، می توانید مرحله بازگشت را حذف کنید

44
00:03:15,290 --> 00:03:18,820
و شما باید آن را بپذیرید و فقط از این تابع استفاده می کنید.

45
00:03:19,600 --> 00:03:24,940
این به سادگی همان نحوی است که قبلاً با بریس‌های فرفری و با بازگشت و عدم عملکرد وجود دارد

46
00:03:24,940 --> 00:03:28,900
حالا همیشه نتیجه این عبارت را اینجا برگردانید.

47
00:03:29,410 --> 00:03:32,380
بنابراین حالا اگر دوباره این را اجرا کنم، باز هم رایگان می بینیم.

48
00:03:36,080 --> 00:03:40,430
Nova این تابع را طوری تنظیم می کند که فرض کنیم همیشه یکی اضافه کند.

49
00:03:41,870 --> 00:03:45,860
سپس من فقط یک استدلال دارم، فرض کنید آنها یک به علاوه یک برگردانند.

50
00:03:47,250 --> 00:03:54,810
حالا، من می‌توانم این را نام ببرم، اما یک اضافه کردن گزارش به، فرض کنید، یک سال، بنابراین نتیجه باید باشد

51
00:03:54,810 --> 00:03:55,200
به.

52
00:03:56,190 --> 00:03:59,220
و البته من نمی توانم این را اجرا کنم، و در واقع می بینم که بشنوم.

53
00:04:00,630 --> 00:04:07,590
اکنون، در چنین حالتی، قبلاً دیدید که قالب بندی سفارش من پرانتزهایی را که قبلاً در آنجا داشتم حذف کرده است.

54
00:04:08,160 --> 00:04:13,320
زیرا اگر شما فقط یک استدلال داشته باشید و این واقعاً برای آن مورد صدق می کند، فقط اگر یکی داشته باشید

55
00:04:13,320 --> 00:04:19,530
فقط در این صورت است که می‌توانید نام آرگومان را در اینجا بدون پرانتز داشته باشید و درست کار خواهد کرد

56
00:04:19,530 --> 00:04:21,360
همانطور که با پرانتز کار خواهد کرد.

57
00:04:21,360 --> 00:04:26,160
بنابراین هر دو در اینجا کار می کنند، اما شما معمولاً از نحو بدون پرانتز استفاده می کنید.

58
00:04:26,310 --> 00:04:30,720
و دوباره، ایده من از تخمیر آنها را برای من حذف می کند.

59
00:04:33,660 --> 00:04:36,870
اگر یک تابع خطا بدون آرگومان دارید.

60
00:04:37,730 --> 00:04:46,280
به طور تصادفی، سپس باید یک جفت پرانتز خالی را مشخص کنید، هرچند، نمی توانید فقط یک پرانتز سفید داشته باشید.

61
00:04:46,280 --> 00:04:46,560
فضا.

62
00:04:46,580 --> 00:04:53,690
شما باید آن جفت خالی را داشته باشید و سپس می توانید کد خود را در آنجا داشته باشید، که بدیهی است که از هیچ آرگومان استفاده نمی کند

63
00:04:53,690 --> 00:04:55,850
زیرا این دقیقاً همان چیزی است که من می خواهم در اینجا نشان دهم.

64
00:04:56,240 --> 00:04:57,650
بنابراین اینجا من می توانستم داشته باشم.

65
00:04:58,700 --> 00:05:05,630
به صورت تصادفی به این شکل بدون هیچ داده ای فراخوانی می شود، و اکنون سه مورد از آن نتیجه را در اینجا می بینیم.

66
00:05:06,410 --> 00:05:11,360
بنابراین اینها توابع aero هستند و نحوهای مختلفی وجود دارد و شما آنها را در طول دوره خواهید دید

67
00:05:11,360 --> 00:05:16,870
و شما باید آن نحو را بشناسید و بفهمید که چگونه دوباره کار می کنند و دلیلی برای استفاده از آنها دارید.

68
00:05:17,030 --> 00:05:19,400
مقاله ضمیمه به همراه ویدیو را بررسی کنید.