1
00:00:02,240 --> 00:00:08,720
ما اکنون یک محصول را با تمام داده های مورد نیاز خود ذخیره می کنیم، اکنون باید تمام آن داده های واقعی را نیز نمایش دهیم

2
00:00:08,810 --> 00:00:11,110
و دیگر هیچ داده ساختگی را نشان ندهید.

3
00:00:11,450 --> 00:00:17,630
بنابراین، اجازه دهید به فایل product-list.ejs خود برویم که یکی از نماهایی است که در آن نمایش می دهیم.

4
00:00:17,630 --> 00:00:23,670
همه محصولات و در آنجا، ما قبلاً عنوان محصول واقعی را خروجی می دهیم، اما تمام.

5
00:00:23,960 --> 00:00:28,970
به عنوان مثال منبع تصویر چیزی است که اکنون باید جایگزین کنیم

6
00:00:29,100 --> 00:00:35,240
و ما می توانیم به سادگی عبارت ejs خود را در آنجا اضافه کنیم و URL تصویر را خروجی کنیم و این خواهد شد

7
00:00:35,240 --> 00:00:36,720
رشته ای که باید معتبر باشد

8
00:00:36,730 --> 00:00:39,410
url، بنابراین این باید قابل نمایش باشد.

9
00:00:39,410 --> 00:00:43,460
اکنون برای متن جایگزین، می توانیم دوباره از عنوان استفاده کنیم،

10
00:00:43,580 --> 00:00:48,490
بنابراین من فقط برای قیمت، عبارت ejs را در آنجا کپی کردم

11
00:00:48,500 --> 00:00:50,660
بیایید بگوییم همیشه دلار است،

12
00:00:50,810 --> 00:00:59,520
بنابراین من آن علامت دلار را در اینجا به عنوان متن کدگذاری شده نگه می دارم و سپس قیمت محصول و توضیحات را ارائه می کنم

13
00:00:59,520 --> 00:01:00,060
اینجا،

14
00:01:00,420 --> 00:01:09,070
من البته متن ساختگی را با توضیحات خود جایگزین می کنم زیرا در محصول ذخیره شده است.

15
00:01:09,180 --> 00:01:13,330
اکنون تمام محصولات قدیمی این ساختار جدید را برآورده نمی کنند،

16
00:01:13,500 --> 00:01:21,420
بنابراین در پوشه داده در products.json، من در واقع همه آنها را از آن آرایه در اینجا حذف می کنم

17
00:01:21,420 --> 00:01:22,880
دوباره یک آرایه خالی است.

18
00:01:23,490 --> 00:01:26,220
با بازگشت به لیست محصول، به نظر خوب می رسد،

19
00:01:26,220 --> 00:01:29,010
اکنون در index.ejs، منطق مشابهی داریم

20
00:01:29,010 --> 00:01:34,850
بنابراین ما می توانیم به سادگی آن را کپی کنیم و به سادگی آن را در index.ejs جایگزین کنیم.

21
00:01:34,860 --> 00:01:42,600
حالا اگر برنامه‌ام را مجدداً در فروشگاه و محصول بارگیری کنم، هیچ محصولی دریافت نکردیم، اما اگر یک مورد جدید اضافه کنم، این یک آزمایش است.

22
00:01:42,600 --> 00:01:51,300
محصول یا به سادگی یک کتاب بیایید یک تصویر را جستجو کنیم، من یک آدرس اینترنتی را در اینجا انتخاب کردم و آن را در اینجا وارد کردم،

23
00:01:51,560 --> 00:01:54,290
سپس بیایید قیمت 19.99 را اضافه کنیم

24
00:01:54,290 --> 00:01:57,800
و این یک کتاب عالی است،

25
00:01:57,800 --> 00:01:59,610
عنوان خوبی به نظر می رسد

26
00:01:59,630 --> 00:02:07,920
اکنون می‌توانید افزودن محصولات را فشار دهید و در حال حاضر از اعداد اعشاری پشتیبانی نمی‌کند تا این مشکل برطرف شود.

27
00:02:07,960 --> 00:02:14,420
ما می توانیم چیزی را در نمای افزودن محصول، در ورودی عدد، تغییر دهیم

28
00:02:14,440 --> 00:02:19,110
ما به سادگی باید یک ویژگی step اضافه کنیم و مرحله را روی 0.01 قرار دهیم،

29
00:02:19,120 --> 00:02:25,080
این بدان معنی است که شما می توانید به خوبی دو رقم اعشار اساسا و افزایش در این اندازه گام داشته باشید.

30
00:02:25,240 --> 00:02:26,890
من این را ذخیره می کنم اما دوباره بارگیری نمی کنم،

31
00:02:26,890 --> 00:02:33,070
در حال حاضر من به سادگی با یک عدد بدون اعشار پیش می روم تا دیگر داده هایم را از دست ندهم و افزودن محصول را فشار می دهم

32
00:02:33,070 --> 00:02:39,430
و در واقع در صفحه شروع، اکنون این محصول را با تمام داده هایی که وارد کرده ام نشان می دهد.

33
00:02:39,430 --> 00:02:43,250
بنابراین اکنون ما آن را بهبود بخشیم و یک گام بزرگ به جلو برداشتیم،

34
00:02:43,340 --> 00:02:46,500
بنابراین در هر دو صفحه به وضوح آن را می بینیم،

35
00:02:46,780 --> 00:02:53,220
بیایید اکنون مطمئن شویم که به عنوان یک مدیر، محصولات را در اینجا نیز ببینیم

36
00:02:53,380 --> 00:02:57,800
و ما نه تنها آنها را می بینیم بلکه می توانیم آنها را ویرایش یا حذف کنیم.

37
00:02:58,030 --> 00:02:59,750
این مرحله بعدی خواهد بود.