1
00:00:02,130 --> 00:00:07,830
من به پروژه برگشتم و در واقع کد html و استایل ها را کمی تغییر دادم، شما پیدا خواهید کرد

2
00:00:07,860 --> 00:00:10,510
تمام فایل های css و فایل های html پیوست شده است

3
00:00:10,530 --> 00:00:17,460
و فقط مطمئن شوید که فایل های html را به پوشه views و فایل های css را به پوشه css در

4
00:00:17,460 --> 00:00:18,470
پوشه عمومی

5
00:00:18,480 --> 00:00:19,420
من این کار را کردم

6
00:00:19,440 --> 00:00:24,870
خوب استایل را کمی تغییر دهید و همچنین کمی نشانه گذاری اضافی اضافه کنید که در آن استفاده خواهیم کرد

7
00:00:24,870 --> 00:00:29,160
این ماژول اما نگران نباشید، من شما را از طریق تمام آن نشانه گذاری راهنمایی خواهم کرد

8
00:00:29,190 --> 00:00:33,180
و در مورد یک ظاهر طراحی شده، در حال حاضر فقط کمی زیباتر است

9
00:00:33,180 --> 00:00:39,150
و همچنین مقداری استایل اضافه کردم که در این ماژول به آن نیاز خواهیم داشت. بنابراین با آن، من البته می توانم از صفحه بازدید کنم

10
00:00:39,810 --> 00:00:41,310
در لوکال هاست 3000

11
00:00:41,310 --> 00:00:43,410
و همین الان به نظر می رسد،

12
00:00:43,580 --> 00:00:47,850
به نظر من کمی زیباتر از قبل است، اما مطمئناً شما همیشه می توانید آن را مطابق با نیاز خود سبک کنید

13
00:00:47,850 --> 00:00:49,960
اما بیایید اکنون روی داده ها تمرکز کنیم.

14
00:00:50,220 --> 00:00:53,200
و در حال حاضر، ما واقعاً با داده ها در برنامه خود کار نمی کنیم

15
00:00:53,250 --> 00:00:53,630
درست در

16
00:00:53,640 --> 00:01:02,670
برای مثال admin.js، ما آن داده‌ها را برای یک محصول در اینجا در مسیر میزبان دریافت می‌کنیم، اما فقط وارد سیستم می‌شویم

17
00:01:02,670 --> 00:01:03,840
که به کنسول،

18
00:01:03,840 --> 00:01:05,100
ما آن را ذخیره نمی کنیم،

19
00:01:05,190 --> 00:01:11,100
ما با آن کار نمی کنیم و کار کردن با آن در حال حاضر سخت است زیرا ما هیچ پایگاه داده ای نداریم

20
00:01:11,130 --> 00:01:13,240
جایی که بتوانیم آن را برای همیشه ذخیره کنیم

21
00:01:13,290 --> 00:01:20,210
اما یک کاری که می توانیم انجام دهیم این است که می توانیم آن را در متغیرهای جاوا اسکریپت ذخیره کنیم و ببینیم که چگونه کار می کند

22
00:01:20,220 --> 00:01:27,150
و اگر اینها سپس در بین درخواست‌های دریافتی از کاربران مختلف به اشتراک گذاشته شوند و البته باقی خواهد ماند

23
00:01:27,150 --> 00:01:32,790
برخی از یادگیری های مهم، زیرا اغلب نمی خواهید چنین داده هایی را به اشتراک بگذارید.

24
00:01:32,820 --> 00:01:38,340
پس بیایید ببینیم که چگونه کار می کند قبل از اینکه بعداً در دوره به سمت یک پایگاه داده دائمی تر حرکت کنیم

25
00:01:38,340 --> 00:01:39,280
راه حل هدایت شده

26
00:01:39,450 --> 00:01:45,720
بنابراین فرض کنید عنوان محصول ورودی که در اینجا خروجی می‌دهیم باید در مکان دائمی‌تری ذخیره شود

27
00:01:45,750 --> 00:01:51,480
و به طور کلی، من در واقع می خواهم بعداً چند فیلد را به فرم اضافه کنم تا بتوانیم اضافه کنیم

28
00:01:51,480 --> 00:01:55,920
بیشتر برای یک محصول نه فقط عنوان، بلکه گام به گام.

29
00:01:55,950 --> 00:01:58,910
بنابراین اجازه دهید شروع به ذخیره آن عنوانی کنیم که در اینجا به دست می آوریم

30
00:01:59,070 --> 00:02:00,700
و فقط برای بازگرداندن آن به خاطره،

31
00:02:00,710 --> 00:02:02,500
در حال حاضر ما این زمینه را اینجا داریم

32
00:02:02,700 --> 00:02:08,530
و اگر این را ارسال کنم، خوب آنگاه این شی را با عنوان کلید و مقداری که کاربر وارد کرده است دریافت می کنم.

33
00:02:08,910 --> 00:02:10,680
پس چگونه می توانیم این را ذخیره کنیم؟

34
00:02:10,860 --> 00:02:16,620
خوب ما می توانیم یک متغیر را در جایی که آن را ذخیره می کنیم اضافه کنیم و اولین چیزی که می توانیم امتحان کنیم این است که می توانیم a اضافه کنیم

35
00:02:16,620 --> 00:02:25,530
متغیر اینجا در admin.js، فرض کنید یک ثابت جدید در اینجا ایجاد می کنیم که محصولات را نام می برم که

36
00:02:25,530 --> 00:02:31,380
یک آرایه و به خاطر داشته باشید حتی اگر ثابت است، آرایه می تواند عناصر جدید را به دلیل آرایه دریافت کند

37
00:02:31,380 --> 00:02:32,930
خودش هنوز همان شیء است،

38
00:02:32,970 --> 00:02:39,060
ما فقط عناصری را به آن اضافه یا حذف می کنیم، اما این روی شیء نگهدارنده کلی تأثیر نمی گذارد.

39
00:02:39,060 --> 00:02:44,490
بنابراین اکنون محصولاتم را اینجا دریافت کردم و در واقع می خواهم محصولاتم را صادر کنم،

40
00:02:44,670 --> 00:02:50,670
بنابراین کاری که من در آنجا انجام خواهم داد این است که از یک نحو متفاوتی استفاده می کنم که در آن صادر می کنم

41
00:02:52,230 --> 00:03:00,360
مسیرهای من و صادرات یک روتر به اینجا و صادرات محصولات و صادرات محصولات من ثابت است. این یکی داره

42
00:03:00,360 --> 00:03:04,020
مفهوم مهم، از آنجایی که من روش صادرات مسیرهای خود را تغییر دادم،

43
00:03:04,020 --> 00:03:11,750
من باید به فایل app.js بروم و با آن در فایل app.js که مسیرهای مدیریت خود را اینجا وارد می کنم، خوب

44
00:03:11,830 --> 00:03:19,140
در واقع این داده‌های مدیریت است و در آنجا، من می‌خواهم به شی routes دسترسی داشته باشم زیرا چنین خواهد بود

45
00:03:19,140 --> 00:03:21,850
یک مسیر شیء است زیرا من آن را در اینجا ایجاد می کنم.

46
00:03:22,050 --> 00:03:27,360
بنابراین داده‌های مدیریت به همه صادراتی که می‌توانید بگویید اشاره دارد و ما اکنون مسیرها و محصولات و

47
00:03:27,360 --> 00:03:34,670
بنابراین وقتی مسیرهای خود را وارد می‌کنم، باید آنها را به این صورت وارد کنم، البته داده‌های مدیریت نیز پس از آن هستند

48
00:03:34,700 --> 00:03:36,260
چیزی که باید اینجا عوض کنم

49
00:03:36,310 --> 00:03:37,410
در واردات

50
00:03:37,900 --> 00:03:43,640
بنابراین اکنون من این را تنظیم کردم و اکنون محصولاتم را نیز صادر کردم، محصولات یک آرایه خالی است.

51
00:03:43,770 --> 00:03:51,220
حالا در اینجا، در پست روتر، بیایید محصولات را برداریم و یک عنصر جدید را به این آرایه فشار دهیم، یک شی جدید

52
00:03:51,220 --> 00:03:52,000
بیایید بگوییم

53
00:03:52,090 --> 00:03:57,700
و آن شی یک عنوان خواهد داشت که عنوانی است که من می‌گیرم، بنابراین بدنه را درخواست کنید و آن را در نظر داشته باشید

54
00:03:57,720 --> 00:03:59,940
also یک شی با ویژگی عنوان است

55
00:03:59,980 --> 00:04:03,210
بنابراین عنوان را با علامت نقطه استخراج می کنم،

56
00:04:03,310 --> 00:04:08,350
البته می‌توانم بدنه درخواست کلی را فشار دهم، زیرا این موضوع دقیقاً یکسان خواهد بود

57
00:04:08,350 --> 00:04:09,020
ساختار

58
00:04:09,100 --> 00:04:14,680
اما بعداً می‌خواهم فیلدهای بیشتری را در اینجا اضافه کنم و بنابراین، یک شی جدید را در اینجا ایجاد خواهم کرد

59
00:04:14,680 --> 00:04:18,280
کمی واضح تر است که ببینیم اینجا چه اتفاقی می افتد.

60
00:04:18,280 --> 00:04:26,050
بنابراین اکنون ما این را به محصولات اضافه می کنیم، اکنون در shop.js که در آن همه محصولات خود را خروجی می دهیم یا جایی که می خواهیم

61
00:04:26,050 --> 00:04:31,200
برای انجام این کار در برخی موارد، بنابراین باید به محصولات دسترسی داشته باشیم و برای این،

62
00:04:31,450 --> 00:04:39,730
بیایید یک import در اینجا اضافه کنیم، بیایید با نیاز به مدیر، داده‌های مدیریت را وارد کنیم،

63
00:04:39,750 --> 00:04:43,050
بنابراین این فایل admin.js که در آن مسیرهای آن را صادر می کنیم،

64
00:04:43,050 --> 00:04:45,290
چیزی که ما در این فایل به آن علاقه ای نداریم

65
00:04:45,330 --> 00:04:47,520
بلکه این آرایه محصولات،

66
00:04:47,610 --> 00:04:55,270
بنابراین اکنون در اینجا بیایید محصولات داده های مدیریت را به گونه ای ثبت کنیم که باید آرایه باشد.

67
00:04:55,270 --> 00:04:56,520
حالا همه چیز را ذخیره کنید

68
00:04:56,520 --> 00:04:58,620
و حالا بیایید به سادگی ببینیم چه چیزی بدست می آوریم.

69
00:04:58,890 --> 00:05:04,940
اگر این صفحه، صفحه فروشگاه را مجدداً بارگذاری کنم، یک آرایه خالی دریافت می کنم که منطقی است زیرا در ابتدا، این

70
00:05:04,960 --> 00:05:05,790
یک آرایه خالی است،

71
00:05:05,820 --> 00:05:06,790
ما آن را صادر می کنیم،

72
00:05:06,810 --> 00:05:08,090
که منطقی است

73
00:05:08,100 --> 00:05:14,460
بنابراین بیایید اکنون به افزودن محصول برویم و بیایید کتابی را در اینجا اضافه کنیم و روی افزودن محصول کلیک کرد.

74
00:05:14,460 --> 00:05:18,270
ما به صفحه فروشگاه برگشتیم و چیز جالبی دیدیم.

75
00:05:18,270 --> 00:05:24,120
ما آرایه ای را با کتاب داخل آن و آن بیانیه log کنسول را می بینیم، که در واقع به کجا می رسد

76
00:05:24,120 --> 00:05:27,150
از جانب؟ خوب که از shop.js می آید

77
00:05:27,190 --> 00:05:34,000
در اینجا فایل کنید، همچنین می‌توانیم با افزودن shop.js در اینجا و ثبت محصولات، این موضوع را واضح‌تر کنیم، بنابراین دو مورد را ثبت کنید.

78
00:05:34,000 --> 00:05:37,360
برای اینکه مشخص شود چه چیزی مسئول خروجی است،

79
00:05:37,360 --> 00:05:39,690
بنابراین shop.js آرایه خالی را ثبت می کند

80
00:05:39,880 --> 00:05:43,680
و حالا بیایید سعی کنیم آن کتاب را در اینجا تولید کنیم

81
00:05:45,130 --> 00:05:48,050
و اکنون shop.js را با آرایه ای که کتاب در آن وجود دارد دریافت کردیم.

82
00:05:48,090 --> 00:05:50,050
حالا این جالب است که ببینید،

83
00:05:50,070 --> 00:05:54,790
بنابراین ما می توانیم چیزی، یک شی یا آرایه، یک نوع مرجع را صادر کنیم

84
00:05:54,930 --> 00:05:59,770
و اگر آن را در فایل دیگر تغییر دهیم، به روز رسانی را نیز در اینجا به ما می دهد.

85
00:05:59,770 --> 00:06:00,900
پس این جالب است،

86
00:06:00,910 --> 00:06:06,610
این یکی از راه‌های اشتراک‌گذاری داده است و صادقانه بگوییم، بعداً از راه‌های مختلفی استفاده خواهیم کرد، زیرا این یکی دارد

87
00:06:06,610 --> 00:06:08,520
عیب. اینجا

88
00:06:08,560 --> 00:06:12,040
اگر مغازه را دوباره بارگیری کنم، هنوز آن را در آنجا دریافت کرده ایم.

89
00:06:12,040 --> 00:06:14,910
حالا اجازه دهید یک مرورگر کاملا متفاوت باز کنم،

90
00:06:15,750 --> 00:06:19,600
من اینجا در فایرفاکس هستم و از لوکال هاست 3000 هم بازدید کردم.

91
00:06:20,130 --> 00:06:24,100
بنابراین این یک مرورگر کاملاً متفاوت است و به نوعی شبیه یک کاربر کاملاً جدید است،

92
00:06:24,120 --> 00:06:27,810
هیچ کوکی با مرورگر دیگر به اشتراک نمی گذارد، هیچ چیز از این نوع،

93
00:06:27,810 --> 00:06:30,770
از همان آدرس IP استفاده می کند اما اینجا مهم نیست.

94
00:06:30,780 --> 00:06:37,250
این یک درخواست کاملاً جدید است که گویی از دستگاه دیگری ساخته شده است و خواهید دید، من هنوز وارد سیستم می شوم

95
00:06:37,250 --> 00:06:37,940
این،

96
00:06:37,950 --> 00:06:45,630
بنابراین این در واقع داده‌ای است که ذاتی سرور گره ما در حال اجراست و بنابراین، به اشتراک گذاشته می‌شود

97
00:06:45,630 --> 00:06:47,670
در تمام کاربران

98
00:06:47,680 --> 00:06:56,340
گاهی اوقات این چیزی است که شما ممکن است بخواهید، اما به ندرت صادقانه بگویم، در واقع احتمالا هرگز نخواهید خواست

99
00:06:56,340 --> 00:06:57,220
این را اجرا کنید،

100
00:06:57,300 --> 00:07:03,930
شما همیشه می خواهید داده ها را برای یک درخواست خاص واکشی کنید و اگر اتفاقی بیفتد همان داده هایی است که نشان می دهید

101
00:07:03,930 --> 00:07:06,130
برای همه کاربرانی که این درخواست را ارسال می کنند،

102
00:07:06,200 --> 00:07:12,990
این خوب است، اما به اشتراک گذاری این داده ها در بین درخواست ها، بین کاربران معمولاً چیزی است که شما نمی خواهید

103
00:07:12,980 --> 00:07:19,020
زیرا اگر اکنون این را با کاربر A ویرایش کنید، کاربر B نسخه به روز شده را مشاهده خواهد کرد

104
00:07:19,140 --> 00:07:21,170
حتی اگر شما نمی خواهید آن را نشان دهید.

105
00:07:21,240 --> 00:07:24,920
شاید اضافه شده باشد که به طور معمول هنوز در پایگاه داده ذخیره نمی شد،

106
00:07:25,020 --> 00:07:27,340
بنابراین هنوز نمی خواهید آن را به سایر کاربران نشان دهید،

107
00:07:27,360 --> 00:07:29,240
شاید برخی از داده های شخصی است.

108
00:07:29,340 --> 00:07:35,030
بنابراین این الگویی است که فعلاً می‌توانیم در اینجا از آن استفاده کنیم و برای تمرین آنچه می‌خواهیم اینجا تمرین کنیم خوب است

109
00:07:35,190 --> 00:07:42,180
اما بعداً در مورد تکنیکی برای اشتراک گذاری داده ها در حافظه در اینجا، در برنامه گره در نقاط مختلف یاد خواهیم گرفت

110
00:07:42,180 --> 00:07:48,960
درخواست‌ها اما فقط برای یک کاربر مشابه و نه برای همه کاربران، زیرا اکنون داده‌ها را به اشتراک گذاشته‌ایم

111
00:07:48,960 --> 00:07:51,240
درخواست ها و بین کاربران

112
00:07:51,240 --> 00:07:54,590
و البته بعداً نحوه استفاده از پایگاه داده را نیز یاد خواهیم گرفت.

113
00:07:54,690 --> 00:07:56,830
اما فعلا به این رویکرد پایبند باشیم،

114
00:07:56,970 --> 00:08:03,150
بیایید از آن برای اشتراک‌گذاری داده‌های ساختگی استفاده کنیم و ببینیم چگونه می‌توانیم این داده‌ها را اکنون در معرض دید خود قرار دهیم.