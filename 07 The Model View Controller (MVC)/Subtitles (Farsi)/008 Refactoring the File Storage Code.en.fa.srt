1
00:00:02,290 --> 00:00:05,400
اکنون منطق ذخیره سازی فایل را به مدل خود اضافه کردیم،

2
00:00:05,450 --> 00:00:10,790
بیایید اکنون کمی این مشکل را برطرف کنیم یا کد موجود در مدل را بهبود ببخشیم، ما در حال استفاده مجدد از برخی کدها هستیم

3
00:00:10,840 --> 00:00:20,260
و اگر از کدهایی استفاده کنیم که همیشه فریاد می‌زند و در واقع، این همان کاری است که می‌خواهم انجام دهم. من

4
00:00:20,260 --> 00:00:29,880
یک تابع کمکی ایجاد خواهد کرد و من آن را در یک ثابت ذخیره می کنم و نام تابع کمکی را دریافت محصولات می گذارم

5
00:00:29,940 --> 00:00:35,360
از فایل و این تابع کمکی این کار را انجام خواهد داد

6
00:00:35,360 --> 00:00:39,120
ساخت مسیر اینجا برای من است و فایل را نیز می خواند،

7
00:00:39,120 --> 00:00:47,300
بنابراین اساساً تمام کارهایی را که من در اینجا انجام می‌دهم انجام می‌دهد

8
00:00:48,360 --> 00:00:53,760
زیرا من آن را در اینجا اجرا می کنم و در نهایت این را برمی گردانم زیرا مشکل این فرآیند انجام می شود

9
00:00:53,760 --> 00:01:00,150
مدتی است و نیاز به اطلاع تماس گیرنده از این عملکرد در مورد زمان انجام آن برطرف نشده است.

10
00:01:00,180 --> 00:01:05,850
بنابراین من هنوز از همان الگوی داشتن این تابع کمکی استفاده می‌کنم که یک فراخوان دریافت می‌کند و اجرا می‌کند

11
00:01:06,030 --> 00:01:07,920
زمانی که خواندن فایل تمام شد.

12
00:01:08,280 --> 00:01:14,740
با این کار، دریافت محصولات از فایل در واقع تنها چیزی است که من در اینجا در fetch all اجرا می کنم،

13
00:01:14,850 --> 00:01:21,210
بنابراین من فقط با این تماس می گیرم و پاسخ تماس را فوروارد می کنم.

14
00:01:21,400 --> 00:01:28,860
اما حالا برای save به این معنی است که در اینجا می توانم با get products from file تماس بگیرم

15
00:01:29,170 --> 00:01:34,500
اما در اینجا من هیچ تماس برگشتی را فوروارد نمی کنم زیرا در عوض منطق خود را در اینجا دارم،

16
00:01:34,600 --> 00:01:39,640
من محصولاتم را در آنجا بازیابی می کنم و این اساساً همان منطقی است که در دریافت محصولات از آن دارم

17
00:01:39,640 --> 00:01:44,670
فایل، اگر خطایی داشته باشم یک آرایه خالی برمی گردم یا محتوایم را تجزیه می کنم،

18
00:01:44,830 --> 00:01:46,100
در اینجا ما آن را برعکس انجام دادیم

19
00:01:46,210 --> 00:01:49,040
اما در نهایت به همان نتیجه می رسد.

20
00:01:49,390 --> 00:01:51,490
پس من اینجا فقط به این منطق علاقه دارم

21
00:01:51,490 --> 00:01:57,200
سپس، می توانید آن را حذف کنید و به جای آن فقط این کد را اینجا بگیرید

22
00:01:58,800 --> 00:02:04,650
و سپس یک تابع ناشناس جدید ایجاد کنید که در آن بدانم محصولاتم را دوباره دریافت خواهم کرد

23
00:02:05,040 --> 00:02:06,690
تابع تماس است،

24
00:02:06,690 --> 00:02:10,580
این تابعی است که من به عنوان آرگومان برای دریافت محصولات از فایل ارسال می کنم،

25
00:02:10,590 --> 00:02:13,070
بنابراین آن چیزی است که در اینجا نامیده می شود.

26
00:02:13,260 --> 00:02:19,350
بنابراین این تابع فراخوانی می‌شود، یک آرایه خالی یا آرایه با داده‌ها و من باید دریافت کند

27
00:02:19,350 --> 00:02:24,840
به هر حال یک عبارت بازگشتی را در اینجا اضافه کنید تا مطمئن شوید که پس از اجرا هرگز این کد را اجرا نمی کنیم

28
00:02:24,840 --> 00:02:25,740
این کد،

29
00:02:25,740 --> 00:02:29,020
این خطایی بود که قبلاً در کد داشتیم.

30
00:02:29,020 --> 00:02:34,970
یا شما به سادگی کد دیگر را در یک عبارت other قرار دهید، یکی از این دو،

31
00:02:34,990 --> 00:02:36,900
بنابراین در اینجا من از رویکرد if else استفاده خواهم کرد.

32
00:02:37,090 --> 00:02:41,530
اما اکنون با آن callback اجرا می شود و این آرایه از محصولات را دریافت می کند

33
00:02:41,860 --> 00:02:49,270
و اکنون اینجا در ذخیره، من این تابع ناشناس را دارم که محصولات را دریافت می کند و در این ناشناس

34
00:02:49,270 --> 00:02:49,930
عملکرد،

35
00:02:49,930 --> 00:02:56,320
سپس کد خود را در جایی که یک محصول جدید اضافه می کنم قرار می دهم و مطمئن می شوم که همیشه از توابع پیکان استفاده می کنم

36
00:02:56,320 --> 00:03:03,970
که این هرگز زمینه خود را از دست نمی دهد و همیشه به کلاس و در نتیجه به شی مبتنی است

37
00:03:03,970 --> 00:03:05,190
روی کلاس

38
00:03:05,410 --> 00:03:07,660
و سپس در فایل می نویسم،

39
00:03:07,660 --> 00:03:09,950
این بدان معنی است که من هم می توانم از شر این خط خلاص شوم.

40
00:03:10,030 --> 00:03:16,110
و اکنون نسخه باریک‌تری دریافت می‌کنیم زیرا در حال استفاده مجدد از کد هستیم، اما اگر دوباره اینجا را بارگیری کنم، باز هم باید کار کند.

41
00:03:16,240 --> 00:03:18,310
به نظر می رسد بارگیری محصول کار می کند

42
00:03:18,610 --> 00:03:27,730
و اگر کتاب دومی را اضافه کنم حتی اگر کتاب چهارم باشد، این کتاب خراب می شود زیرا p تعریف نشده است. آره

43
00:03:27,800 --> 00:03:33,200
مسیر اینجا در ذخیره، این یک مشکل است که مسیر تعریف نشده است

44
00:03:34,680 --> 00:03:38,560
زیرا من اکنون آن را فقط در تابع کمکی خود تعریف می کنم.

45
00:03:38,570 --> 00:03:41,090
اکنون راه های مختلفی برای رفع آن وجود دارد،

46
00:03:41,360 --> 00:03:48,410
یکی از راه‌های ساده‌تر این است که به سادگی این را به‌عنوان یک ثابت کمکی جهانی در اینجا، p ایجاد کنم تا بتوانم

47
00:03:48,410 --> 00:03:54,130
از آن در کل فایل استفاده کنید، البته می توانید به سراغ راه حل های مختلف نیز بروید و آن را در توابع منتقل کنید

48
00:03:54,260 --> 00:03:59,760
اما اکنون مسیر باید در روش save و در get products from file موجود باشد.

49
00:03:59,830 --> 00:04:08,090
و اگر اکنون این کتاب دوم و در واقع چهارم را دوباره بارگذاری کنم و دوباره امتحان کنم،

50
00:04:08,260 --> 00:04:10,180
این در حال حاضر کار می کند.

51
00:04:10,180 --> 00:04:16,240
بنابراین اکنون می توانیم به زیبایی با محصولات خود کار کنیم، آنها را در یک فایل ذخیره کنیم، آنها را از آنجا واکشی کنیم

52
00:04:16,360 --> 00:04:18,580
و همه اینها از طریق یک مدل

53
00:04:18,580 --> 00:04:23,080
و این الگوی MVC است که در پروژه ما پیاده سازی شده است.