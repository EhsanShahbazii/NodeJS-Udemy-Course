1
00:00:02,130 --> 00:00:05,850
پس بیایید همه این فایل های html را به قالب های pug تبدیل کنیم

2
00:00:05,960 --> 00:00:12,700
و برای این کار، با add product شروع می کنم و یک فایل add-product.pug در پوشه views ایجاد می کنم.

3
00:00:12,720 --> 00:00:18,090
اکنون مجدداً با تایپ html و انتخاب یک اسکلت html5 با کمک emmet در اینجا ایجاد می کنم.

4
00:00:18,090 --> 00:00:18,340
که

5
00:00:18,360 --> 00:00:21,390
قالب html5 در اینجا و زدن تب،

6
00:00:21,600 --> 00:00:24,050
بنابراین این در حال حاضر شروع خوبی به ما می دهد.

7
00:00:24,060 --> 00:00:33,120
حالا عنوان را برای افزودن محصول تنظیم می کنم و حالا می خواهم این فرم را به pug و البته هدر تبدیل کنم

8
00:00:33,300 --> 00:00:37,840
هم. اکنون هدر چیزی است که ما قبلاً در فروشگاه دریافت کرده ایم، بنابراین می توانیم آن را اینجا کپی کنیم.

9
00:00:38,120 --> 00:00:41,820
آن را حرکت دهید تا محصولی مانند این در بدن اضافه شود،

10
00:00:41,820 --> 00:00:46,820
فقط مطمئن شوید که کلاس فعال را از اولین تگ anchor به دومی منتقل می کنید

11
00:00:46,830 --> 00:00:52,950
چون اکنون این مسیر فعال است و البته من می خواهم بخش اصلی خود را با فرم اضافه کنم

12
00:00:52,980 --> 00:01:02,390
اکنون. من دوباره با کپی کردن کد html اصلی، وارد شدن به آنجا و در کنار هدر، آن را مهندسی معکوس می کنم.

13
00:01:02,590 --> 00:01:03,660
من می خواهم آن را اضافه کنم.

14
00:01:03,700 --> 00:01:10,390
Main اکنون فقط اصلی است، فرم پس از آن تو در تو قرار گرفته است، بنابراین بیایید آن را تورفتگی کنیم، فرم دارای این کلاس است.

15
00:01:10,390 --> 00:01:15,570
بیایید این را زنجیره کنیم و فرم نیز دارای ویژگی هایی است

16
00:01:15,620 --> 00:01:19,980
بنابراین بیایید آنها را در اینجا به عنوان یک لیست جدا شده با کاما در پرانتز اضافه کنیم.

17
00:01:21,040 --> 00:01:26,090
اکنون می‌توانیم div را در اینجا تورفتگی کنیم، زیرا البته در شکل تودرتو است.

18
00:01:26,100 --> 00:01:31,390
div این کلاس را دارد و شما یاد گرفتید که یک div را نیز می توان حذف کرد، بنابراین می توانید فقط نقطه و

19
00:01:31,390 --> 00:01:38,870
کلاس برای ارائه یک div. و سپس در آنجا ما برچسب را داریم، برچسب اینجا یک ویژگی دارد،

20
00:01:38,890 --> 00:01:45,260
پس بیایید این را اضافه کنیم و متنی دارد که همانطور که یاد گرفتید با یک فضای خالی جدا می شود.

21
00:01:45,260 --> 00:01:52,200
اکنون یک ورودی نیز در اینجا داریم، ورودی از نوع متن، بنابراین بیایید این براکت ها را اضافه کنیم

22
00:01:52,280 --> 00:02:01,580
در اینجا تنظیم کنید تا برخی از ویژگی ها با کاما از هم جدا شوند و id در واقع می تواند به طور جداگانه ارائه شود

23
00:02:02,450 --> 00:02:04,200
با یک هشتگ در مقابل

24
00:02:04,280 --> 00:02:06,470
دوباره با استفاده از انتخابگر css خود،

25
00:02:06,470 --> 00:02:08,190
چیزی که قبلاً برای کلاس حل کرده اید،

26
00:02:08,210 --> 00:02:12,580
این نیز انتخابگر css برای این کلاس است، pug از این انتخابگرها استفاده می کند

27
00:02:12,590 --> 00:02:14,840
بنابراین اکنون شما #عنوان دارید.

28
00:02:14,870 --> 00:02:19,760
حالا بیایید تگ بسته شدن div را برداریم و دکمه را نیز اضافه کنیم، تورفتگی دارد زیرا

29
00:02:19,760 --> 00:02:20,780
بخشی از فرم بنابراین

30
00:02:20,780 --> 00:02:23,380
بیایید مطمئن شویم که در فرم است،

31
00:02:23,420 --> 00:02:25,640
بیایید به آن کلاس دکمه بدهیم

32
00:02:25,640 --> 00:02:34,750
این را فراموش نکنید و بیایید لیست ویژگی را اضافه کنیم تا این یک دکمه ارسال شود، مانند آن و سپس a

33
00:02:34,770 --> 00:02:37,490
فضای خالی برای جدا کردن متن افزودن محصول.

34
00:02:39,200 --> 00:02:42,600
بیایید تگ های بسته شدن را حذف کنیم و این باید باشد.

35
00:02:42,600 --> 00:02:45,280
اکنون اجازه دهید برخی از محتوای پویا را نیز در اینجا ارائه دهیم،

36
00:02:45,420 --> 00:02:49,670
به عنوان مثال محصول را در اینجا اضافه کنید، این عنوان. من دوباره

37
00:02:49,800 --> 00:02:54,150
خروجی این را به صورت پویا، به عنوان مثال عنوان صفحه،

38
00:02:54,150 --> 00:02:59,300
اکنون باید مطمئن شویم که این کلید را به این الگو منتقل می کنیم و این الگو را در آن رندر می کنیم

39
00:02:59,340 --> 00:03:03,380
admin.js. بنابراین اینجا جایی که من این فایل را ارسال می کنم،

40
00:03:03,420 --> 00:03:04,920
من این فایل را نمی فرستم

41
00:03:04,920 --> 00:03:09,080
در عوض من اکنون رندر می کنم، فایل مدیریت خود را اینجا رندر می کنم،

42
00:03:09,090 --> 00:03:15,750
ادمین ببخشید مدیر نیست، فایل add-product.pug، این فایل به طور خودکار انتخاب می شود و من در یک

43
00:03:15,750 --> 00:03:18,050
شیئی که جفت های ارزش کلیدی را نگه می دارد

44
00:03:18,050 --> 00:03:23,670
من می خواهم بتوانم در قالب دسترسی داشته باشم و در آنجا، کلید عنوان صفحه ام را دریافت کردم،

45
00:03:23,790 --> 00:03:24,510
بنابراین آن کلید

46
00:03:24,510 --> 00:03:26,110
من سعی می کنم به اینجا دسترسی پیدا کنم،

47
00:03:26,190 --> 00:03:37,150
من آن را دریافت کردم و عنوانی را برای افزودن محصول اختصاص خواهم داد، درست مثل آن. با آن اگر دوباره بارگذاری کنیم،

48
00:03:37,210 --> 00:03:41,430
این از بین رفته است زیرا سرور به دلیل تغییرات سمت سرور ما دوباره راه اندازی شد.

49
00:03:41,690 --> 00:03:46,970
حالا اگر روی افزودن محصول کلیک کنم، این کد html از نظر ظاهری است.

50
00:03:47,060 --> 00:03:51,260
واردات را فراموش کردم اضافه کنم

51
00:03:51,700 --> 00:03:58,240
بله، البته من باید شیوه نامه های خود را نیز وارد کنم، بنابراین بیایید پیوندها را از shop.pug و کپی کنیم.

52
00:03:58,250 --> 00:04:00,410
آنها را اینجا در هدر اضافه کنید.

53
00:04:00,530 --> 00:04:01,550
بیایید افزودن را نیز بررسی کنیم

54
00:04:01,550 --> 00:04:03,270
فایل html محصول،

55
00:04:03,560 --> 00:04:05,870
من همچنین باید forms.css را وارد کنم

56
00:04:05,910 --> 00:04:07,540
همانطور که می بینید فایل کنید

57
00:04:07,670 --> 00:04:08,970
پس بیایید این را در اینجا کپی کنیم،

58
00:04:08,960 --> 00:04:16,400
این خط و همچنین اضافه کردن این واردات. اکنون نیازی به راه اندازی مجدد سرور نیست زیرا ما فقط قالب را تغییر دادیم

59
00:04:16,520 --> 00:04:18,630
و بنابراین nodemon دوباره راه اندازی نمی شود

60
00:04:18,750 --> 00:04:21,290
و اکنون بارگذاری مجدد، به نظر بسیار بهتر است

61
00:04:21,820 --> 00:04:23,230
و بیایید این را امتحان کنیم،

62
00:04:23,240 --> 00:04:25,010
همچنین هنوز کار می کند.

63
00:04:25,010 --> 00:04:25,550
پس همین،

64
00:04:25,550 --> 00:04:28,580
حالا بیایید روی صفحه 404 هم کار کنیم. برای این

65
00:04:28,610 --> 00:04:36,360
من یک فایل 404.pug را در اینجا اضافه می کنم و دوباره یک اسکلت معمولی html5 ایجاد می کنم.

66
00:04:36,440 --> 00:04:43,330
من می گویم صفحه ای در اینجا یافت نشد و قبلاً آن را کپی می کنم، چه چیزی نیاز دارید،

67
00:04:43,340 --> 00:04:44,660
فایل css اصلی،

68
00:04:44,660 --> 00:04:52,000
من آن واردات را اینجا از فایل add-product.pug کپی می کنم، این پیوند، بیایید آن را در 404.pug کپی کنیم.

69
00:04:52,070 --> 00:04:58,630
فایل به طوری که ما آن را دریافت کردیم. و سپس در فایل 404.html، هدر را دریافت کردم و صفحه یافت نشد.

70
00:04:58,820 --> 00:05:01,190
خوب ما هدر را قبلاً در افزودن محصول دریافت کردیم

71
00:05:01,190 --> 00:05:03,170
بیایید هدر را اینجا کپی کنیم،

72
00:05:03,410 --> 00:05:11,130
آن 404.pug را با تورفتگی در آنجا و در کنار هدر داخل بدنه به بدنه منتقل کنید.

73
00:05:11,180 --> 00:05:14,150
من یک تگ h1 اضافه می کنم که در آن می گویم صفحه یافت نشد.

74
00:05:14,480 --> 00:05:15,940
و با آن ما باید آن را داشته باشیم،

75
00:05:15,980 --> 00:05:20,420
حالا بیایید مطمئن شویم که این رندر می شود و برای آن باید به فایل app.js برویم.

76
00:05:20,570 --> 00:05:25,620
زیرا در اینجاست که ما به جای ارسال یک فایل، همه میان افزارها را در اختیار داریم،

77
00:05:25,640 --> 00:05:33,130
اکنون فایل 404 را نیز رندر می کنم و مانند قبل به طور خودکار در پوشه views مشاهده می شود

78
00:05:33,170 --> 00:05:41,870
به دلیل راه اندازی ما و به دنبال فایل های pug. پس با آن، اگر من اکنون وارد هر مسیر تصادفی شوم که وارد نمی شود

79
00:05:41,870 --> 00:05:44,970
وجود دارد، ما در واقع صفحه یافت نشد.

80
00:05:45,110 --> 00:05:49,450
بنابراین این اکنون کار می کند و اکنون از pug به عنوان موتور قالب استفاده می کند.

81
00:05:49,580 --> 00:05:53,630
حالا چند کار خوب دیگر وجود دارد که پاگ می تواند انجام دهد که می خواهم به شما نشان دهم.