1
00:00:02,470 --> 00:00:08,440
بنابراین بیایید مطمئن شویم که می توانیم محصول خود را در یک فایل ذخیره کنیم و دیگر در این آرایه در اینجا ذخیره نکنیم.

2
00:00:09,380 --> 00:00:13,520
برای این کار وقتی اینجا ذخیره را صدا می زنیم، می خواهم آن را در یک فایل ذخیره کنم

3
00:00:13,550 --> 00:00:19,160
و البته در آن فایل، من می خواهم همه محصولات، قدیمی و جدید را داشته باشم.

4
00:00:19,160 --> 00:00:22,590
بنابراین، اول از همه، باید بتوانیم با سیستم فایل کار کنیم،

5
00:00:22,640 --> 00:00:27,420
بنابراین من fs را از ماژول اصلی fs وارد می کنم.

6
00:00:27,650 --> 00:00:35,810
اکنون آن فایل نیز باید در مسیر خاصی ایجاد شود، بنابراین من از ابزار path استفاده می کنم.

7
00:00:35,810 --> 00:00:40,890
ماژول مسیر برای ساخت مسیری که روی همه سیستم عامل ها کار می کند.

8
00:00:40,970 --> 00:00:48,650
اکنون اینجا در save، سپس مسیر خود را ایجاد می کنم و این کار را با path join انجام می دهم.

9
00:00:48,650 --> 00:00:51,280
بنابراین با استفاده از ماژول هسته مسیر، اوه،

10
00:00:51,700 --> 00:00:59,920
و نام این را p می گذارم تا از درگیری فضای نام جلوگیری کنم و مسیر باید دایرکتوری ریشه من باشد

11
00:01:00,090 --> 00:01:03,660
و ما در واقع هنوز آن عملکرد کمکی را داریم

12
00:01:03,660 --> 00:01:10,860
اما اگر آن را حذف کردید، مطمئناً می توانید آن را مانند قبل ایجاد کنید یا به سادگی این کد را در اینجا کپی کنید

13
00:01:10,860 --> 00:01:11,690
شما می خواهید،

14
00:01:12,770 --> 00:01:16,060
در صورتی که آن را حذف کرده باشید، دوباره آن را پیوست به این سخنرانی می‌یابید.

15
00:01:16,370 --> 00:01:19,300
من به سادگی این منطق را در اینجا کپی می کنم

16
00:01:20,320 --> 00:01:21,000
و آن را به آنجا منتقل کنید

17
00:01:21,010 --> 00:01:29,270
اما مطمئناً می‌توانم به سادگی از تابع کمکی که در آنجا ایجاد کردم استفاده کنم. اما این البته است

18
00:01:29,270 --> 00:01:31,340
فقط دایرکتوری ریشه، در آنجا

19
00:01:31,400 --> 00:01:38,450
من یک پوشه داده جدید خواهم داشت و آن را زودتر از موعد ایجاد می کنم تا مشکل مجوز نداشته باشیم.

20
00:01:39,000 --> 00:01:44,190
بنابراین من پوشه داده را به پوشه پروژه root اضافه می کنم و در آن پوشه داده، می خواهم ذخیره کنم

21
00:01:44,190 --> 00:01:45,160
پرونده من،

22
00:01:45,330 --> 00:01:52,370
به طوری که در واقع یک فایل خواهد بود و باید نام محصولات را داشته باشد و من این یک را می دهم

23
00:01:52,490 --> 00:01:56,560
پسوند json زیرا می خواهم داده های خود را در قالب json ذخیره کنم.

24
00:01:56,790 --> 00:02:02,220
خوب پس این محصولات است، حالا برای ذخیره یک محصول جدید در آنجا،

25
00:02:02,260 --> 00:02:07,300
اول از همه باید مجموعه محصولات موجود را دریافت کنم،

26
00:02:07,300 --> 00:02:10,360
بنابراین من اول از همه آن فایل را می خوانم.

27
00:02:10,690 --> 00:02:17,200
بنابراین بیایید از فایل fs read استفاده کنیم و این فایل کل محتوای فایل یک فایل را می خواند

28
00:02:17,350 --> 00:02:22,030
و به هر حال برای فایل های بسیار بزرگ، راه های کارآمدتری وجود دارد زیرا نمی خواهید آنها را بخوانید

29
00:02:22,150 --> 00:02:24,790
قبل از اینکه با آنها کار کنید، همه آنها را به خاطر بسپارید،

30
00:02:24,820 --> 00:02:26,560
سپس می توانید آنها را به عنوان یک جریان بخوانید،

31
00:02:26,560 --> 00:02:28,190
چنین عملکردی وجود دارد،

32
00:02:28,360 --> 00:02:33,690
شما می توانید یک جریان خواندن با این تابع ایجاد کنید، اما ما می توانیم کل فایل را در اینجا بخوانیم، این مشکلی ندارد

33
00:02:33,940 --> 00:02:39,400
و فایل را در این مسیر می خوانم، p که همان فایلی است که به آن علاقه دارم

34
00:02:39,400 --> 00:02:41,960
و پس از پایان خواندن آن، کاری را انجام خواهم داد

35
00:02:42,160 --> 00:02:47,890
و در آنجا یا با خطا مواجه می شویم یا داده دریافت می کنیم، بنابراین محتوای فایل را دریافت می کنیم

36
00:02:47,890 --> 00:02:50,540
می توان گفت، بافری وجود خواهد داشت.

37
00:02:51,470 --> 00:02:55,620
حالا بیایید محتوای فایل را اینجا ثبت کنیم

38
00:02:56,410 --> 00:03:03,640
و بیایید ببینیم اگر اکنون ذخیره را صدا کنیم چه چیزی بدست می آوریم. اگر برای افزودن محصول بروم و چیزی را اینجا تایپ کنم،

39
00:03:03,970 --> 00:03:15,980
خراب می شود و خراب می شود، اگر به بالا بروید زیرا محصولات در واکشی تعریف نشده اند. که در

40
00:03:16,000 --> 00:03:21,080
با این حال، آن را ذخیره کنید، خطایی ایجاد نکرد، اما همانطور که می بینید، در اینجا تعریف نشده است

41
00:03:21,340 --> 00:03:25,650
و ما تعریف نشدیم زیرا این فایل به سادگی وجود ندارد،

42
00:03:25,650 --> 00:03:26,830
هیچ محتوایی در آن وجود ندارد

43
00:03:26,830 --> 00:03:32,280
بنابراین، می توانید ببینید که در اینجا ما هیچ فایلی با آن نام نداریم

44
00:03:32,300 --> 00:03:34,940
بنابراین خواندن آن به نوعی ناموفق بود.

45
00:03:35,000 --> 00:03:39,120
و اگر من یک خطا در اینجا اضافه کنم برای چاپ خطا دریافت می کنیم

46
00:03:39,440 --> 00:03:40,970
و من دوباره این را امتحان می کنم

47
00:03:41,270 --> 00:03:46,870
پس بیایید برای افزودن محصول برگردیم، روی آن کلیک کنید و بالای این پیغام خطا در اینجا اسکرول می کنیم، می بینید که این

48
00:03:46,910 --> 00:03:47,630
پیغام خطا

49
00:03:47,660 --> 00:03:50,160
ما اکنون با این خط وارد می شویم

50
00:03:50,390 --> 00:03:52,520
و در آنجا ما چنین فایل یا دایرکتوری را نمی بینیم

51
00:03:52,580 --> 00:03:57,780
و این بسیار منطقی است زیرا در واقع، همانطور که قبلاً ذکر کردم وجود ندارد.

52
00:03:57,830 --> 00:04:06,830
پس بدیهی است که اگر وجود نداشته باشد، پس من نیز می خواهم ادامه دهم و می توانم. من به سادگی بررسی می کنم که آیا ما دریافت کرده ایم

53
00:04:06,830 --> 00:04:09,250
یک خطا و اگر هیچ کدام را دریافت نکنیم، این خطا خالی خواهد بود

54
00:04:09,260 --> 00:04:15,650
اما اگر یکی داشته باشیم، من به سادگی می‌خواهم یک آرایه خالی جدید ایجاد کنم، زیرا هیچ محصول موجودی نداریم.json

55
00:04:15,660 --> 00:04:16,460
فایل،

56
00:04:16,460 --> 00:04:23,990
بنابراین ما هیچ محصول قدیمی ذخیره نمی کنیم و در غیر این صورت می خواهم از محصول موجود استفاده کنم. به عبارت دیگر می خواهم

57
00:04:24,020 --> 00:04:29,500
یک متغیر جدید در اینجا اضافه کنید که من محصولات را نام می برم

58
00:04:29,710 --> 00:04:34,630
و در ابتدا این یک آرایه خالی است و اگر خطایی داشته باشیم در واقع آن را به همین شکل حفظ می کنم

59
00:04:34,930 --> 00:04:36,460
اما اگر خطایی دریافت نکنیم

60
00:04:36,490 --> 00:04:38,520
و بنابراین من یک علامت تعجب در اینجا اضافه خواهم کرد،

61
00:04:38,530 --> 00:04:41,880
بنابراین اگر هیچ خطایی دریافت نکردیم، در صورتی که این خطا است

62
00:04:41,870 --> 00:04:49,700
بنابراین اگر خطایی دریافت نکردیم، می‌خواهم محصولات را از فایلی که استخراج کردم بخوانم.

63
00:04:49,890 --> 00:04:55,590
بنابراین در اینجا می دانم که محتوای فایل چیزی خواهد بود، باید محتوای فایل من باشد

64
00:04:55,650 --> 00:05:01,410
و از آنجایی که این یک فایل json است، آن را با فرمت json در آنجا ذخیره می کنم، بنابراین محصولات را برابر قرار می دهم

65
00:05:01,410 --> 00:05:05,500
به json که یک شی کمکی موجود در vanilla nodejs است،

66
00:05:05,520 --> 00:05:08,170
بنابراین نیازی به تعریف این موضوع به تنهایی ندارید

67
00:05:08,250 --> 00:05:15,210
و در آنجا ما متد تجزیه را داریم که json ورودی را می گیرد و یک آرایه جاوا اسکریپت یا به ما برمی گرداند.

68
00:05:15,210 --> 00:05:17,400
شی یا هر چیزی که در فایل است.

69
00:05:17,670 --> 00:05:21,480
بنابراین در اینجا می توانم محتوای فایل را تجزیه کنم و این باید کار کند

70
00:05:21,900 --> 00:05:24,370
یا حداقل باید آن را امتحان کنیم.

71
00:05:24,420 --> 00:05:29,910
بنابراین اکنون می دانم که آن محصول یک آرایه خواهد بود، یا آرایه ای که از فایل خواندم یا خالی و

72
00:05:29,910 --> 00:05:33,110
بنابراین، اکنون می توانیم محصول جدید خود را در آنجا اضافه کنیم،

73
00:05:33,180 --> 00:05:41,400
بنابراین من محصولات را فشار می نامم و محصول جدید خود را که این است روی آن فشار می دهم. در حال حاضر مهم است، برای اطمینان

74
00:05:41,700 --> 00:05:49,470
که این به کلاس اشاره دارد، باید از تابع فلش در اینجا استفاده کنید زیرا در غیر این صورت این تابع خود را از دست می دهد

75
00:05:49,470 --> 00:05:54,010
متن و دیگر به کلاس اشاره نخواهد کرد.

76
00:05:54,050 --> 00:05:56,920
ما این تنظیمات را داریم اما در جایی که من از یک تابع پیکان استفاده می کنم،

77
00:05:56,980 --> 00:06:03,100
این باید همچنان به کلاس من اشاره داشته باشد و بنابراین اکنون می توانم آن را روی این آرایه یا به آرایه جدید فشار دهم

78
00:06:03,100 --> 00:06:05,100
یکی یا اونی که از فایل خوندم

79
00:06:05,320 --> 00:06:09,240
و حالا کار باقی مانده این است که باید آن را دوباره در فایل ذخیره کنم.

80
00:06:09,280 --> 00:06:16,560
بنابراین دوباره از ماژول سیستم فایل استفاده خواهم کرد و اکنون از Write file استفاده می کنم و آن را روی همان می نویسم

81
00:06:16,560 --> 00:06:18,670
مسیری که من آن را از آنجا خواندم

82
00:06:18,810 --> 00:06:22,350
و من داده های json خود را در آن قرار خواهم داد،

83
00:06:22,380 --> 00:06:24,750
بنابراین دوباره از آن شی کمکی json استفاده خواهم کرد

84
00:06:24,780 --> 00:06:30,630
و اکنون متد stringify find وجود دارد که یک شی یا آرایه جاوا اسکریپت را می گیرد و آن را تبدیل می کند

85
00:06:30,660 --> 00:06:31,470
به json

86
00:06:31,470 --> 00:06:33,250
به طوری که این فرمت مناسب داشته باشد،

87
00:06:33,390 --> 00:06:37,560
بنابراین در آنجا من این آرایه محصولات را می گیرم و آن را به json تبدیل می کنم

88
00:06:37,590 --> 00:06:40,600
و سپس این در فایل نوشته می شود.

89
00:06:40,750 --> 00:06:48,190
و در اینجا من همچنین یک callback دارم که ممکن است خطا دریافت کنم و به سادگی آن خطا را در اینجا ثبت می کنم تا ببینم

90
00:06:48,190 --> 00:06:51,070
اگر کار کند با این همه،

91
00:06:51,400 --> 00:06:52,270
بیا برگردیم،

92
00:06:52,450 --> 00:06:55,000
بیایید به صفحه افزودن محصول برگردیم و روی این دکمه کلیک کنید.

93
00:06:55,060 --> 00:06:57,320
این خطا البته هنوز وجود دارد

94
00:06:57,430 --> 00:07:00,680
اما حالا اگر به بالا پیمایش کنیم، بیایید ببینیم که آیا کار می کند یا خیر. اینجا

95
00:07:00,720 --> 00:07:06,580
که خوب به نظر می رسد و در داده ها، ما واقعاً یک فایل products.json را می بینیم که حاوی آن یک محصول است

96
00:07:06,610 --> 00:07:07,750
ما ایجاد کردیم

97
00:07:08,170 --> 00:07:09,220
حالا این بود

98
00:07:09,280 --> 00:07:11,650
ما هیچ مورد داده قدیمی نداریم،

99
00:07:11,650 --> 00:07:16,640
بیایید اکنون به عقب برگردیم و محصول دیگری را در اینجا اضافه کنیم

100
00:07:17,480 --> 00:07:20,840
و ببینید که آیا آن نیز کار می کند. اگر به بالا اسکرول کنم،

101
00:07:21,050 --> 00:07:25,410
خوب ما آن را در اینجا نیز می بینیم، حدس می زنم، این نیز به خوبی کار کرد.

102
00:07:25,430 --> 00:07:32,510
بنابراین این کار می‌کند، ما می‌توانیم یک فایل را بخوانیم، داده‌ها را به داده‌های موجود اضافه کنیم یا در صورت وجود آن را ایجاد کنیم

103
00:07:32,510 --> 00:07:37,620
هنوز وجود نداشته است و بنابراین به نظر می رسد ذخیره داده های ما در فایل کار می کند،

104
00:07:37,820 --> 00:07:41,810
بدیهی است که این یک ذخیره سازی بسیار ابتدایی است اما بهتر از هیچ است.

105
00:07:41,810 --> 00:07:44,960
اکنون بدیهی است که ما همچنین می خواهیم بتوانیم داده ها را از آنجا واکشی کنیم،

106
00:07:44,960 --> 00:07:54,020
بنابراین در واکشی همه، من نیز می خواهم این فایل را در اینجا بخوانم، فایل را در مسیر خود می خوانم و بنابراین خواهم کرد

107
00:07:54,050 --> 00:08:02,030
خطای من یا محتوای فایل را با استفاده از تابع پیکان در اینجا دریافت کنید و سپس داده های مورد نظر من را نگه می دارد

108
00:08:02,030 --> 00:08:09,130
برای استفاده. حالا اگر در اینجا با خطا مواجه شدم، می‌خواهم یک آرایه خالی را برگردانم زیرا هیچ محصولی را درست دریافت نکردم.

109
00:08:09,140 --> 00:08:14,090
من همیشه می خواهم یک آرایه را برگردانم زیرا این چیزی است که همه انتظار دارند اما حداقل باید خالی باشد

110
00:08:14,180 --> 00:08:15,830
در صورت بروز خطا

111
00:08:15,860 --> 00:08:20,740
و البته شما همچنین می توانید یک پیام خطا پرتاب کنید و یکی را نشان دهید، اما در اینجا فقط آرایه خالی خواهد بود

112
00:08:21,480 --> 00:08:22,510
در غیر این صورت

113
00:08:22,710 --> 00:08:27,410
و من به بلوک else نیازی ندارم زیرا پس از بازگشت، اجرای این تابع را به پایان می‌رسانیم

114
00:08:27,410 --> 00:08:33,940
به هر حال، پس از این بلاک اگر، من تجزیه شده خود را برمی گردم و این مهم است،

115
00:08:34,040 --> 00:08:36,020
در غیر این صورت فقط یک رشته خواهد بود،

116
00:08:36,080 --> 00:08:44,000
محتوای فایل تجزیه شده من و این مهم است که در نظر داشته باشید زیرا این در اینجا در پایان بازیابی شده است

117
00:08:44,030 --> 00:08:45,100
به عنوان یک متن

118
00:08:45,260 --> 00:08:51,050
بنابراین برای برگرداندن آن به عنوان یک آرایه، باید json parse را فراخوانی کنید.

119
00:08:51,110 --> 00:08:57,200
بنابراین اکنون محتوای فایل خود را به صورت تجزیه شده برمی گردانم و بنابراین از شر محصول برگشتی خلاص می شوم

120
00:08:57,200 --> 00:09:04,410
بیانیه اینجاست و من اکنون همیشه اشیاء یا لیست محصولاتم را برمی گردانم.

121
00:09:05,000 --> 00:09:12,640
بنابراین بیایید این را در عمل ببینیم، بیایید این را ذخیره کنیم و این صفحه را دوباره بارگیری کنیم، کلید تعریف نشده است، منطقی است،

122
00:09:12,640 --> 00:09:18,350
من سعی می کنم چیزی از این مسیر بخوانم اما آن مسیر فقط در متد ذخیره تعریف شده است.

123
00:09:18,570 --> 00:09:19,980
پس فعلا بیایید آن را کپی کنیم،

124
00:09:20,010 --> 00:09:22,920
البته می‌توانیم آن را اصلاح کنیم، اما بیایید فعلاً آن را کپی کنیم

125
00:09:23,760 --> 00:09:25,540
و حالا اگر این صفحه را دوباره بارگذاری کنم،

126
00:09:25,740 --> 00:09:32,980
من هنوز این خطا را دریافت می کنم و اکنون اشکال زدایی یا درک آن بسیار سخت است

127
00:09:33,000 --> 00:09:35,670
اما آیا می دانید اینجا چه مشکلی پیش می آید؟

128
00:09:35,670 --> 00:09:36,930
در سخنرانی بعدی آن را برطرف خواهیم کرد.