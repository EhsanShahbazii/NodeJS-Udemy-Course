1
00:00:02,210 --> 00:00:08,690
اکنون که من نگاهی گذرا به اصول اولیه و چرخش های اصلی داشتم، باید بدانید، بیایید به

2
00:00:08,690 --> 00:00:13,130
برخی از سینتکس های نسل بعدی جاوا اسکریپت که از این ماژول در طول این دوره خواهید دید.

3
00:00:14,950 --> 00:00:22,060
War یک کلمه کلیدی است که یک متغیر جدید ایجاد می کند و در واقع از هم اکنون کمی Syntex منسوخ شده است.

4
00:00:22,060 --> 00:00:28,360
on از let به جای war استفاده خواهد کرد و اجازه دهید یک متغیر نیز ایجاد کند.

5
00:00:28,780 --> 00:00:32,470
محدوده رفتار کمی متفاوت است، اما ما می توانیم در حال حاضر آن را نادیده بگیریم.

6
00:00:32,470 --> 00:00:38,500
در اینجا، برخی از منابع جاوا اسکریپت نسل بعدی مانند دوره ششم من یا البته همه آنها را رایگان بررسی کنید

7
00:00:38,500 --> 00:00:40,720
منابع برای یادگیری همه چیز در مورد اجازه.

8
00:00:41,230 --> 00:00:48,490
اما دلیل اصلی استفاده از Lettice این است که ما اکنون راه دیگری برای ایجاد یک متغیر داریم.

9
00:00:48,670 --> 00:00:53,380
و با آن منظور من متغیری است که هرگز تغییر نمی کند، که در واقع برای هر سه مورد در اینجا صادق است.

10
00:00:53,800 --> 00:01:00,250
اما بیایید بگوییم که در واقع یک مقدار جدید به هر کدام در اینجا اختصاص می دهیم، اما هرگز نام را تغییر نمی دهیم یا سرگرمی هایی داریم.

11
00:01:00,790 --> 00:01:02,410
ما کاملاً می توانیم از آن استفاده کنیم.

12
00:01:02,410 --> 00:01:04,420
هیچ مشکلی در این مورد وجود ندارد.

13
00:01:04,720 --> 00:01:10,710
اما برای روشن‌تر شدن اهداف خود در کد و می‌دانیم که هرگز تغییر نخواهد کرد.

14
00:01:11,020 --> 00:01:11,530
اجازه دهید.

15
00:01:12,610 --> 00:01:19,120
نام ببرید و سرگرمی هایی دارد، ما همچنین می توانیم از یک کلمه کلیدی جدید موجود در جاوا اسکریپت استفاده کنیم، و این نتیجه نهایی است

16
00:01:19,240 --> 00:01:19,840
کلمه کلیدی.

17
00:01:20,200 --> 00:01:26,830
این یک به اصطلاح ثابت ایجاد می کند و این روشن می کند که ما هرگز برای تغییر مقدار نام برنامه ریزی نمی کنیم

18
00:01:26,860 --> 00:01:27,860
یا سرگرمی هایی دارد

19
00:01:28,480 --> 00:01:30,400
ما قصد داریم آن را از سن تغییر دهیم.

20
00:01:30,400 --> 00:01:31,600
و به همین دلیل ترک کردیم.

21
00:01:32,020 --> 00:01:37,660
و به همین دلیل است که ما دو کلمه کلیدی متفاوت برای ایجاد متغیرها داریم، هرچند، دوباره،

22
00:01:37,660 --> 00:01:39,280
اینها واقعاً متغیر نیستند.

23
00:01:39,280 --> 00:01:45,370
بسته به اینکه قصد تغییر آن را دارید یا خیر، ثابت هایی وجود دارد، حتی const Aulet.

24
00:01:45,820 --> 00:01:49,050
بنابراین حالا اگر این را اجرا کنید، دقیقاً به همان روش قبلی کار می کند.

25
00:01:49,990 --> 00:01:59,680
اما اتفاقاً، اگر در اینجا می‌خواهیم نام را روی Maximilien تنظیم کنیم و من دوباره نود بازی شطرنج را اجرا کنم،

26
00:01:59,830 --> 00:02:04,450
اکنون که سعی می کنم به یک متغیر ثابت اختصاص دهم، در واقع یک خطا دریافت می کنم.

27
00:02:05,580 --> 00:02:12,000
بنابراین این در واقع ایده پشت مفهوم را به ما نشان می دهد و شما می خواهید تا آنجا که ممکن است از CONSED استفاده کنید

28
00:02:12,270 --> 00:02:15,810
تا حد امکان در مورد آنچه در کد شما اتفاق می افتد واضح باشید.

29
00:02:16,020 --> 00:02:22,110
و اگر چیزی هرگز نباید تغییر کند، آن را به یک مسابقه تبدیل کنید تا اگر به طور تصادفی این کار را انجام دادید با خطا مواجه شوید

30
00:02:22,110 --> 00:02:22,610
تغییر دهید.

31
00:02:22,860 --> 00:02:24,570
بنابراین همه شما دوباره این تغییر را به وجود آورده اید.

32
00:02:24,700 --> 00:02:27,210
اما من می خواستم به شما نشان دهم که Let و Kohn چگونه کار می کنند.